{"remainingRequest":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\src\\views\\Car\\CarCard\\add-card.vue?vue&type=style&index=0&id=64ee989c&scoped=true&lang=scss&","dependencies":[{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\src\\views\\Car\\CarCard\\add-card.vue","mtime":1704167262758},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1714140750111},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1714140755034},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1714140753336},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1714140750590},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1714140753088},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1714140753454}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hZGQtY2FyZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjZmODsKICBoZWlnaHQ6IDEwMHZoOwoKICAuYWRkLWhlYWRlciB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIHBhZGRpbmc6IDAgMjBweDsKICAgIGhlaWdodDogNjRweDsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CgogICAgLmxlZnQgewogICAgICBzcGFuIHsKICAgICAgICBtYXJnaW4tcmlnaHQ6IDRweDsKICAgICAgfQogICAgICAuYXJyb3d7CiAgICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgICB9CiAgICB9CgogICAgLnJpZ2h0IHsKICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgICB9CiAgfQoKICAuYWRkLW1haW4gewogICAgYmFja2dyb3VuZDogI2Y0ZjZmODsKICAgIHBhZGRpbmc6IDIwcHggMTMwcHg7CgogICAgLmZvcm0tY29udGFpbmVyIHsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKCiAgICAgIC50aXRsZSB7CiAgICAgICAgaGVpZ2h0OiA2MHB4OwogICAgICAgIGxpbmUtaGVpZ2h0OiA2MHB4OwogICAgICAgIHBhZGRpbmctbGVmdDogMjBweDsKICAgICAgfQoKICAgICAgLmZvcm0gewogICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgICAgICAgcGFkZGluZzogMjBweCA2NXB4IDI0cHg7CgogICAgICAgIC5lbC1mb3JtIHsKICAgICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7CgogICAgICAgICAgLmVsLWZvcm0taXRlbSB7CiAgICAgICAgICAgIHdpZHRoOiA1MCU7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgICAucHJldmlld3sKICAgICAgaW1newogICAgICAgIHdpZHRoOiAxMDBweDsKICAgICAgfQogICAgfQogIH0KCiAgLmFkZC1mb290ZXIgewogICAgcG9zaXRpb246IGZpeGVkOwogICAgYm90dG9tOiAwOwogICAgd2lkdGg6IDEwMCU7CiAgICBwYWRkaW5nOiAyNHB4IDUwcHg7CiAgICBjb2xvcjogIzAwMDAwMGQ5OwogICAgZm9udC1zaXplOiAxNHB4OwogICAgYmFja2dyb3VuZDogI2ZmZjsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICB9Cn0K"},{"version":3,"sources":["add-card.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiPA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"add-card.vue","sourceRoot":"src/views/Car/CarCard","sourcesContent":["<template>\n  <div class=\"add-card\">\n    <header class=\"add-header\">\n      <el-page-header :content=\"id?'编辑月卡':'新增月卡'\" @back=\"$router.back()\" />\n    </header>\n    <main class=\"add-main\">\n      <div class=\"form-container\">\n        <div class=\"title\">车辆信息</div>\n        <div class=\"form\">\n          <!--\n            el-form： :model  :rules\n            el-form-item:  prop指定要用哪条规则\n            el-input  v-model双向绑定\n           -->\n          <el-form ref=\"carInfoForm\" :model=\"carInfoForm\" :rules=\"carInfoRules\" label-width=\"100px\">\n            <el-form-item label=\"车主姓名\" prop=\"personName\">\n              <el-input v-model=\"carInfoForm.personName\" />\n            </el-form-item>\n            <el-form-item label=\"联系方式\" prop=\"phoneNumber\">\n              <el-input v-model=\"carInfoForm.phoneNumber\" />\n            </el-form-item>\n            <el-form-item label=\"车辆号码\" prop=\"carNumber\">\n              <el-input v-model=\"carInfoForm.carNumber\" />\n            </el-form-item>\n            <el-form-item label=\"车辆品牌\" prop=\"carBrand\">\n              <el-input v-model=\"carInfoForm.carBrand\" />\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n      <div class=\"form-container\">\n        <div class=\"title\">最新一次月卡缴费信息</div>\n        <!-- 缴费信息 -->\n        <div class=\"form\">\n          <el-form ref=\"feeForm\" :model=\"feeForm\" :rules=\"feeFormRules\" label-width=\"100px\">\n            <el-form-item label=\"有效日期\" prop=\"payTime\">\n              <el-date-picker\n                v-model=\"feeForm.payTime\"\n                type=\"daterange\"\n                range-separator=\"至\"\n                start-placeholder=\"开始日期\"\n                end-placeholder=\"结束日期\"\n                value-format=\"yyyy-MM-dd\"\n              />\n            </el-form-item>\n            <el-form-item label=\"支付金额\" prop=\"paymentAmount\">\n              <el-input v-model=\"feeForm.paymentAmount\" />\n            </el-form-item>\n            <el-form-item label=\"支付方式\" prop=\"paymentMethod\">\n              <el-select v-model=\"feeForm.paymentMethod\">\n                <el-option\n                  v-for=\"item in payMethodList\"\n                  :key=\"item.id\"\n                  :value=\"item.id\"\n                  :label=\"item.name\"\n                />\n              </el-select>\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n\n    </main>\n    <footer class=\"add-footer\">\n      <div class=\"btn-container\">\n        <el-button>重置</el-button>\n        <el-button type=\"primary\" @click=\"confirmAdd\">确定</el-button>\n      </div>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport { createCardAPI, getDetailAPI, updateCardAPI } from '@/api/card'\nexport default {\n  data() {\n    const validateCarNumber = (rule, value, callback) => {\n      // value:用户在表单里输入的最新的数据\n      // callback：放行函数 必须调用 校验通过直接调用 如果是未通过callback(new Error('错误提示语'))\n      const reg = /^[\\u4E00-\\u9FA5][\\da-zA-Z]{6}$/\n      if (!reg.test(value)) {\n        // 校验不通过\n        callback(new Error('请输入符合规范的车牌号'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      // 表单对象\n      carInfoForm: {\n        personName: '',\n        phoneNumber: '',\n        carNumber: '',\n        carBrand: ''\n      },\n      // 规则对象\n      carInfoRules: {\n        personName: [\n          {\n            required: true, message: '请输入车主姓名', trigger: 'blur'\n          }\n        ],\n        phoneNumber: [\n          {\n            required: true, message: '请输入联系方式', trigger: 'blur'\n          }\n        ],\n        carNumber: [\n          {\n            required: true, message: '请输入车辆号码', trigger: 'blur'\n          },\n          {\n            validator: validateCarNumber,\n            trigger: 'blur'\n          }\n        ],\n        carBrand: [\n          {\n            required: true, message: '请输入车辆品牌', trigger: 'blur'\n          }\n        ]\n      },\n      // 缴费信息表单\n      feeForm: {\n        payTime: '', // 支付时间\n        paymentAmount: null, // 支付金额\n        paymentMethod: '' // 支付方式\n      },\n      // 缴费规则\n      feeFormRules: {\n        payTime: [\n          {\n            required: true,\n            message: '请选择支付时间'\n          }\n        ],\n        paymentAmount: [\n          {\n            required: true,\n            message: '请输入支付金额',\n            trigger: 'blur'\n          }\n        ],\n        paymentMethod: [\n          {\n            required: true,\n            message: '请选择支付方式',\n            trigger: 'change'\n          }\n        ]\n      },\n      // 支付方式下拉列表\n      payMethodList: [\n        {\n          id: 'Alipay',\n          name: '支付宝'\n        },\n        {\n          id: 'WeChat',\n          name: '微信'\n        },\n        {\n          id: 'Cash',\n          name: '线下'\n        }\n      ]\n    }\n  },\n  computed: {\n    // 缓存id 方便调用\n    id() {\n      return this.$route.query.id\n    }\n  },\n  mounted() {\n    // 只有id存在 也就说是编辑状态 才有资格获取详情\n    if (this.id) {\n      this.getCardDetail()\n    }\n  },\n  methods: {\n    confirmAdd() {\n      // 俩个表单统一校验\n      // 调用实例的validate方法\n      // 1. 串行校验 第一个表单校验通过之后再开始第二个表单\n      // 2. 并行校验 俩个表单项同时进行校验\n      // const p1 = this.$refs.feeForm.validate()\n      // const p2 = this.$refs.carInfoForm.validate()\n      // Promise.all([p1, p2]).then(res => {\n      //   console.log(res)\n      // })\n      this.$refs.carInfoForm.validate(valid => {\n        if (valid) {\n          // 第二个表单校验\n          this.$refs.feeForm.validate(async valid => {\n            if (valid) {\n              // TODO API\n              // 二次处理请求参数\n              const reqData = {\n                ...this.carInfoForm,\n                ...this.feeForm,\n                cardStartDate: this.feeForm.payTime[0],\n                cardEndDate: this.feeForm.payTime[1]\n              }\n              delete reqData.payTime\n              console.log(reqData)\n              // 调用接口需要区分是编辑还是新增\n              if (this.id) {\n                // 编辑\n                await updateCardAPI(reqData)\n              } else {\n                await createCardAPI(reqData)\n              }\n\n              // 后续处理\n              // 提示用户\n              this.$message.success(`${this.id ? '更新成功' : '新增成功'}`)\n              // 跳回列表\n              this.$router.back()\n            }\n          })\n        }\n      })\n    },\n    async getCardDetail() {\n      const id = this.id\n      const res = await getDetailAPI(id)\n      // 第一个表单\n      const { carInfoId, rechargeId, personName, phoneNumber, carNumber, carBrand } = res.data\n      this.carInfoForm = { carInfoId, rechargeId, personName, phoneNumber, carNumber, carBrand }\n      // 第二个表单\n      const { cardStartDate, cardEndDate, paymentAmount, paymentMethod } = res.data\n      this.feeForm.payTime = [cardStartDate, cardEndDate]\n      this.feeForm.paymentAmount = paymentAmount\n      this.feeForm.paymentMethod = paymentMethod\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.add-card {\n  background-color: #f4f6f8;\n  height: 100vh;\n\n  .add-header {\n    display: flex;\n    align-items: center;\n    padding: 0 20px;\n    height: 64px;\n    background-color: #fff;\n\n    .left {\n      span {\n        margin-right: 4px;\n      }\n      .arrow{\n        cursor: pointer;\n      }\n    }\n\n    .right {\n      text-align: right;\n    }\n  }\n\n  .add-main {\n    background: #f4f6f8;\n    padding: 20px 130px;\n\n    .form-container {\n      background-color: #fff;\n\n      .title {\n        height: 60px;\n        line-height: 60px;\n        padding-left: 20px;\n      }\n\n      .form {\n        margin-bottom: 20px;\n        padding: 20px 65px 24px;\n\n        .el-form {\n          display: flex;\n          flex-wrap: wrap;\n\n          .el-form-item {\n            width: 50%;\n          }\n        }\n      }\n    }\n    .preview{\n      img{\n        width: 100px;\n      }\n    }\n  }\n\n  .add-footer {\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n    padding: 24px 50px;\n    color: #000000d9;\n    font-size: 14px;\n    background: #fff;\n    text-align: center;\n  }\n}\n</style>\n"]}]}