{"remainingRequest":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\src\\views\\System\\Role\\AddRole.vue?vue&type=style&index=0&id=23c1f6b4&scoped=true&lang=scss&","dependencies":[{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\src\\views\\System\\Role\\AddRole.vue","mtime":1704167259197},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1714140750111},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1714140755034},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1714140753336},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1714140750590},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1714140753088},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1714140753454}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmFkZC1yb2xlIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNmY4OwogIGhlaWdodDogMTAwdmg7CgogIC5hZGQtaGVhZGVyIHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgICBwYWRkaW5nOiAwIDIwcHg7CiAgICBoZWlnaHQ6IDY0cHg7CiAgICBsaW5lLWhlaWdodDogNjRweDsKICAgIGZvbnQtc2l6ZTogMTZweDsKICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKCiAgICAubGVmdCB7CiAgICAgIHNwYW4gewogICAgICAgIG1hcmdpbi1yaWdodDogNHB4OwogICAgICB9CgogICAgICAuYXJyb3cgewogICAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgICAgfQogICAgfQoKICAgIC5yaWdodCB7CiAgICAgIHRleHQtYWxpZ246IHJpZ2h0OwogICAgfQogIH0KCiAgLmFkZC1tYWluIHsKICAgIHBvc2l0aW9uOiBmaXhlZDsKICAgIHRvcDogNjRweDsKICAgIGJvdHRvbTogODhweDsKICAgIHdpZHRoOiAxMDAlOwogICAgb3ZlcmZsb3cteTogYXV0bzsKICAgIGJhY2tncm91bmQ6ICNmNGY2Zjg7CiAgICBwYWRkaW5nOiAyMHB4IDIzMHB4OwogICAgZGlzcGxheTogZmxleDsKICAgIC5zdGVwLWNvbnRhaW5lciB7CiAgICAgIGhlaWdodDogNDAwcHg7CiAgICAgIHdpZHRoOiAyMDBweDsKICAgIH0KICAgIC5mb3JtLWNvbnRhaW5lciB7CiAgICAgIGZsZXg6MTsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICAgICAgb3ZlcmZsb3cteTogYXV0bzsKICAgICAgLnRpdGxlIHsKICAgICAgICBoZWlnaHQ6IDYwcHg7CiAgICAgICAgbGluZS1oZWlnaHQ6IDYwcHg7CiAgICAgICAgcGFkZGluZy1sZWZ0OiAyMHB4OwogICAgICB9CiAgICAgIC5mb3JtIHsKICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4OwogICAgICAgIHBhZGRpbmc6IDIwcHggNjVweCAyNHB4OwogICAgICAgIC5lbC1mb3JtIHsKICAgICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7CiAgICAgICAgfQogICAgICAgIC5pbmZvewogICAgICAgICAgZm9udC1zaXplOjE0cHg7CiAgICAgICAgICBjb2xvcjojNjY2OwogICAgICAgICAgLmZvcm0taXRlbXsKICAgICAgICAgICAgbWFyZ2luLWJvdHRvbToyMHB4OwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgICAuZm9ybS1ib3h7CiAgICAgICAgd2lkdGg6IDYwMHB4OwogICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgICAgfQogICAgfQogIH0KCiAgLmFkZC1mb290ZXIgewogICAgcG9zaXRpb246IGZpeGVkOwogICAgYm90dG9tOiAwOwogICAgd2lkdGg6IDEwMCU7CiAgICBwYWRkaW5nOiAyNHB4IDUwcHg7CiAgICBjb2xvcjogIzAwMDAwMGQ5OwogICAgZm9udC1zaXplOiAxNHB4OwogICAgYmFja2dyb3VuZDogI2ZmZjsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIHotaW5kZXg6IDEwMDAxOwogIH0KICAudHJlZS13cmFwcGVyIHsKICAgICAgZGlzcGxheTogZmxleDsKICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogICAgICBmbGV4LXdyYXA6IHdyYXA7CiAgICAgIC50cmVlLWl0ZW0gewogICAgICAgIGZsZXg6IDE7CiAgICAgICAgcGFkZGluZzogMHB4IDRweDsKICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgICAgLnRyZWUtdGl0bGUgewogICAgICAgICAgYmFja2dyb3VuZDogI2Y1ZjdmYTsKICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgICAgIHBhZGRpbmc6IDEwcHggMDsKICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEycHg7CiAgICAgICAgfQogICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["AddRole.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqNA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddRole.vue","sourceRoot":"src/views/System/Role","sourcesContent":["<template>\n  <div class=\"add-role\">\n    <header class=\"add-header\">\n      <div class=\"left\">\n        <span class=\"arrow\" @click=\"$router.back()\"><i class=\"el-icon-arrow-left\" />返回</span>\n        <span>|</span>\n        <span>添加角色</span>\n      </div>\n      <div class=\"right\">\n        黑马程序员\n      </div>\n    </header>\n    <main class=\"add-main\">\n      <div class=\"step-container\">\n        <el-steps direction=\"vertical\" :active=\"currentActive\">\n          <el-step title=\"角色信息\" />\n          <el-step title=\"权限信息\" />\n          <el-step title=\"检查并完成\" />\n        </el-steps>\n      </div>\n      <!--\n        v-if: 真实的dom创建和移除\n        v-show: 操作的只是css样式的变化  原因: 步骤切换的时候有可能回退 保证dom之前操作过的状态还在\n       -->\n      <div v-show=\"currentActive === 1\" class=\"form-container\">\n        <div class=\"title\">角色信息</div>\n        <div class=\"form\">\n          <el-form ref=\"infoForm\" class=\"form-box\" :model=\"roleForm\" :rules=\"roleRules\">\n            <el-form-item label=\"角色名称\" prop=\"roleName\">\n              <el-input v-model=\"roleForm.roleName\" />\n            </el-form-item>\n            <el-form-item label=\"角色描述\">\n              <el-input v-model=\"roleForm.remark\" />\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n      <div v-show=\"currentActive === 2\" class=\"form-container\">\n        <div class=\"title\">权限配置</div>\n        <div class=\"form\">\n          <div class=\"tree-wrapper\">\n            <div v-for=\"item in treeList\" :key=\"item.id\" class=\"tree-item\">\n              <div class=\"tree-title\">{{ item.title }}</div>\n              <el-tree\n                ref=\"tree\"\n                :data=\"item.children\"\n                show-checkbox\n                default-expand-all\n                node-key=\"id\"\n                highlight-current\n                check-strictly\n                :props=\"{ label: 'title' }\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-show=\"currentActive === 3\" class=\"form-container\">\n        <div class=\"title\">检查并完成</div>\n        <div class=\"form\">\n          <div class=\"info\">\n            <div class=\"form-item\">角色名称：{{ roleForm.roleName }}</div>\n            <div class=\"form-item\">角色描述：{{ roleForm.remark }}</div>\n            <div class=\"form-item\">角色权限：</div>\n            <div class=\"tree-wrapper\">\n              <div v-for=\"item in disableTreeList\" :key=\"item.id\" class=\"tree-item\">\n                <div class=\"tree-title\">{{ item.title }}</div>\n                <!--\n                  在内部通过遍历数组生成每一个树节点的时候 检测当前props选项中\n                  是否传入了一个配置项 叫做disabled 如果传入了 调用这个方法拿到它的返回值\n                  如果当前拿到的是true 就把当前项禁用掉 如果没有返回true 不禁用\n\n                  arrary.some(item=> 判断条件)\n                 -->\n                <el-tree\n                  ref=\"diabledTree\"\n                  :data=\"item.children\"\n                  show-checkbox\n                  default-expand-all\n                  check-strictly\n                  node-key=\"id\"\n                  :highlight-current=\"false\"\n                  :props=\"{ label: 'title', disabled:()=>true}\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n    <footer class=\"add-footer\">\n      <!--\n        上一步按钮 只有currentAcitve > 1 才显示\n        下一步按钮 等于3不显示\n       -->\n      <div class=\"btn-container\">\n        <el-button v-if=\"currentActive>1\" @click=\"prev\">上一步</el-button>\n        <el-button v-if=\"currentActive !== 3\" type=\"primary\" @click=\"next\">下一步</el-button>\n        <el-button v-if=\"currentActive === 3\" type=\"primary\" @click=\"confirmAdd\">确认添加</el-button>\n      </div>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport { getTreeListAPI, addRoleAPI, getRoleDetailAPI, updateRoleAPI } from '@/api/system'\nexport default {\n  data() {\n    return {\n      currentActive: 1,\n      roleForm: {\n        roleName: '',\n        remark: ''\n      },\n      roleRules: {\n        roleName: [\n          { required: true, message: '请输入角色名称', trigger: 'blur' }\n        ]\n      },\n      treeList: [], // tree列表\n      disableTreeList: [], // 回填显示的树列表\n      permsList: [] // 存入选中项节点\n    }\n  },\n  computed: {\n    roleId() {\n      return this.$route.query.roleId\n    }\n  },\n  async mounted() {\n    await this.getTreeList()\n    if (this.roleId) {\n      this.getDetail()\n    }\n  },\n  methods: {\n    async getDetail() {\n      const res = await getRoleDetailAPI(this.roleId)\n      const { perms, roleName, remark } = res.data\n      this.roleForm.roleName = roleName\n      this.roleForm.remark = remark\n      // 回填树  setCheckedKeys\n      this.$refs.tree.forEach((treeInstance, index) => {\n        treeInstance.setCheckedKeys(perms[index])\n      })\n    },\n    async confirmAdd() {\n      if (this.roleId) {\n        await updateRoleAPI({\n          roleId: this.roleId,\n          ...this.roleForm,\n          perms: this.permsList\n        })\n      } else {\n        await addRoleAPI({\n          ...this.roleForm,\n          perms: this.permsList\n        })\n      }\n\n      this.$router.back()\n    },\n    async getTreeList() {\n      const res = await getTreeListAPI()\n      this.treeList = res.data\n      // 在disabledTreeList中放一份数据 因为数组是引用类型 在进行赋值的时候实际上赋值是数据的引用\n      // 也就是说这俩份数据实际指向的是同一个内存区域（堆内存） 一个修改另一个也会受到影响\n      // 解决办法：深拷贝\n      this.disableTreeList = JSON.parse(JSON.stringify(res.data))\n    },\n    prev() {\n      if (this.currentActive === 1) return\n      this.currentActive--\n    },\n    next() {\n      if (this.currentActive === 3) return\n      // 在角色信息这个状态下 做表单校验 如果校验通过 才能进入到下一个状态 （this.currentActive++）\n      if (this.currentActive === 1) {\n        // 处在角色信息状态\n        this.$refs.infoForm.validate(valid => {\n          if (valid) {\n            this.currentActive++\n          }\n        })\n      } else if (this.currentActive === 2) {\n        // 选择权限信息的状态\n        // 目标：判断用户至少选择了一项\n        // 思路: 获取到用户选择了什么 把每一项的数组展开合并为一个大数组 如果这个大数组长度大于零证明至少选中了一项\n        this.permsList = []\n        this.$refs.tree.forEach(treeInstance => {\n          const keys = treeInstance.getCheckedKeys()\n          console.log(keys)\n          this.permsList.push(keys)\n        })\n        if (this.permsList.flat().length === 0) {\n          // 没有选中\n          return this.$message({\n            type: 'warning',\n            message: '请至少选择一项'\n          })\n        } else {\n          this.currentActive++\n          // 回填树形结构\n          this.$refs.diabledTree.forEach((treeInstance, index) => {\n            treeInstance.setCheckedKeys(this.permsList[index])\n          })\n        }\n      }\n    }\n  }\n}\n</script>\n<style scoped lang=\"scss\">\n.add-role {\n  background-color: #f4f6f8;\n  height: 100vh;\n\n  .add-header {\n    display: flex;\n    justify-content: space-between;\n    padding: 0 20px;\n    height: 64px;\n    line-height: 64px;\n    font-size: 16px;\n    font-weight: bold;\n    background-color: #fff;\n\n    .left {\n      span {\n        margin-right: 4px;\n      }\n\n      .arrow {\n        cursor: pointer;\n      }\n    }\n\n    .right {\n      text-align: right;\n    }\n  }\n\n  .add-main {\n    position: fixed;\n    top: 64px;\n    bottom: 88px;\n    width: 100%;\n    overflow-y: auto;\n    background: #f4f6f8;\n    padding: 20px 230px;\n    display: flex;\n    .step-container {\n      height: 400px;\n      width: 200px;\n    }\n    .form-container {\n      flex:1;\n      background-color: #fff;\n      overflow-y: auto;\n      .title {\n        height: 60px;\n        line-height: 60px;\n        padding-left: 20px;\n      }\n      .form {\n        margin-bottom: 20px;\n        padding: 20px 65px 24px;\n        .el-form {\n          display: flex;\n          flex-wrap: wrap;\n        }\n        .info{\n          font-size:14px;\n          color:#666;\n          .form-item{\n            margin-bottom:20px;\n          }\n        }\n      }\n      .form-box{\n        width: 600px;\n        display: flex;\n        flex-direction: column;\n      }\n    }\n  }\n\n  .add-footer {\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n    padding: 24px 50px;\n    color: #000000d9;\n    font-size: 14px;\n    background: #fff;\n    text-align: center;\n    z-index: 10001;\n  }\n  .tree-wrapper {\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n      .tree-item {\n        flex: 1;\n        padding: 0px 4px;\n        text-align: center;\n        .tree-title {\n          background: #f5f7fa;\n          text-align: center;\n          padding: 10px 0;\n          margin-bottom: 12px;\n        }\n      }\n    }\n}\n</style>\n"]}]}