{"remainingRequest":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\src\\views\\System\\Role\\index.vue?vue&type=style&index=0&id=de1c8aa2&scoped=true&lang=scss&","dependencies":[{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\src\\views\\System\\Role\\index.vue","mtime":1704167259033},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1714140750111},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1714140755034},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1714140753336},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1714140750590},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1714140753088},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1714140753454}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnJvbGUtY29udGFpbmVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGZvbnQtc2l6ZTogMTRweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIHBhZGRpbmc6MTBweDsKICAubGVmdC13cmFwcGVyIHsKICAgIHdpZHRoOiAyMDBweDsKICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNlNGU3ZWM7CiAgICBwYWRkaW5nOiA0cHg7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CgogICAgLnJvbGUtaXRlbSB7CiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgICAgaGVpZ2h0OiA1NnB4OwogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgICAgIHBhZGRpbmc6IDAgMjBweDsKICAgICAgY3Vyc29yOiBwb2ludGVyOwoKICAgICAgJi5hY3RpdmUgewogICAgICAgIGJhY2tncm91bmQ6ICNlZGY1ZmY7CiAgICAgICAgY29sb3I6ICM0NzcwZmY7CiAgICAgIH0KICAgIH0KCiAgICAucm9sZS1pbmZvIHsKICAgICAgZGlzcGxheTogZmxleDsKICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKCiAgICAgIC5pY29uIHsKICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7CiAgICAgIH0KICAgIH0KCiAgICAubW9yZSB7CiAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICB9CiAgICAuYWRkQnRuewogICAgICB3aWR0aDogMTAwJTsKICAgICAgbWFyZ2luLXRvcDogMjBweDsKICAgIH0KICB9CgogIC5yaWdodC13cmFwcGVyIHsKICAgIGZsZXg6IDE7CgogICAgLnRyZWUtd3JhcHBlciB7CiAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKCiAgICAgIC50cmVlLWl0ZW0gewogICAgICAgIGZsZXg6IDE7CiAgICAgICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2U0ZTdlYzsKICAgICAgICBwYWRkaW5nOiAwcHggNHB4OwogICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgICAudHJlZS10aXRsZSB7CiAgICAgICAgICBiYWNrZ3JvdW5kOiAjZjVmN2ZhOwogICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgICAgcGFkZGluZzogMTBweCAwOwogICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTJweDsKICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICA6OnYtZGVlcCAuZWwtdGFic19fbmF2LXdyYXAgewogICAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7CiAgICB9CgogICAgLnVzZXItd3JhcHBlcnsKICAgICAgcGFkZGluZzoyMHB4OwogICAgfQogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/System/Role","sourcesContent":["<template>\n  <div class=\"role-container\">\n    <div class=\"left-wrapper\">\n      <!--\n        思路：tab切换类交互的实现通用思路\n         1. 点击谁就把谁的index值记录下来(需要一个独一无二的标识就可以 id)\n         2. 通过动态控制class类名 active  :class=\"{active: index === 当前项的下标值}\"\n       -->\n      <div\n        v-for=\"(item,index) in roleList\"\n        :key=\"item.roleId\"\n        class=\"role-item\"\n        :class=\"{active: currentIndex === index}\"\n        @click=\"switchTab(index)\"\n      >\n        <div class=\"role-info\">\n          <!--\n            是一个组件 而且还是一个全局组件\n            1. 传入不同的iconClass就会显示不同的图标\n            2. 图标名来自于icons文件夹下的svg文件夹下的所有可选图标的名称\n\n            目标：根据当前谁被激活 显示激活的图标\n            未激活 user 激活的图标 user-active\n           -->\n          <svg-icon :icon-class=\"currentIndex === index ?'user-active':'user'\" class=\"icon\" />\n          {{ item.roleName }}\n        </div>\n        <div class=\"more\">\n          <el-dropdown>\n            <span class=\"el-dropdown-link\">\n              <svg-icon icon-class=\"more\" />\n            </span>\n            <el-dropdown-menu slot=\"dropdown\">\n              <el-dropdown-item @click.native=\"goEdit(item.roleId)\">编辑角色</el-dropdown-item>\n              <el-dropdown-item>删除</el-dropdown-item>\n            </el-dropdown-menu>\n          </el-dropdown>\n        </div>\n      </div>\n      <el-button class=\"addBtn\" size=\"mini\" @click=\"$router.push('/addRole')\">添加角色</el-button>\n    </div>\n    <div class=\"right-wrapper\">\n      <el-tabs v-model=\"activeName\">\n        <el-tab-pane label=\"功能权限\" name=\"first\">\n          <div class=\"tree-wrapper\">\n            <div v-for=\"item in treeList\" :key=\"item.id\" class=\"tree-item\">\n              <div class=\"tree-title\"> {{ item.title }} </div>\n              <el-tree\n                ref=\"tree\"\n                :data=\"item.children\"\n                :props=\"defaultProps\"\n                :show-checkbox=\"true\"\n                node-key=\"id\"\n                default-expand-all\n              />\n            </div>\n          </div>\n        </el-tab-pane>\n        <el-tab-pane label=\"成员列表\" name=\"second\">\n          <div class=\"user-wrapper\">\n            <el-table\n              :data=\"roleUserList\"\n              style=\"width: 100%\"\n            >\n              <el-table-column\n                type=\"index\"\n                width=\"250\"\n                label=\"序号\"\n              />\n              <el-table-column\n                prop=\"name\"\n                label=\"员工姓名\"\n              />\n              <el-table-column\n                prop=\"userName\"\n                label=\"登录账号\"\n              />\n            </el-table>\n          </div>\n        </el-tab-pane>\n      </el-tabs>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getRoleListAPI, getTreeListAPI, getRoleDetailAPI, getRoleUserAPI } from '@/api/system'\n\n// 递归添加disabled属性\n// 重复的执行同一个函数 目的是为针对于每一层中的每一个对象都执行相同的逻辑\n// 相同的逻辑：遍历数组 给每一项都添加一个属性disable\n// 判断：递归的结束条件 必须有子集数组 才去调用这个函数\nfunction addDisabled(treeList) {\n  treeList.forEach(item => {\n    item.disabled = true\n    if (item.children) {\n      addDisabled(item.children)\n    }\n  })\n}\nexport default {\n  name: 'Role',\n  data() {\n    return {\n      roleList: [], // 角色列表\n      currentIndex: 0,\n      treeList: [], // 树形列表\n      defaultProps: {\n        children: 'children',\n        label: 'title',\n        disabled: (data, node) => {\n          return true\n        }\n      },\n      activeName: 'first',\n      roleUserList: [] // 成员列表\n    }\n  },\n  async mounted() {\n    await this.getRoleList()\n    await this.getTreeList()\n    // 组件初始化的时候模拟点击一下第一项\n    // 1. this.roleList不能是空 2.treeList也不能为空  意味着需要等到上面的俩个方法中的异步请求返回之后才能拿调用\n    // switcheTab方法\n    this.switchTab(0)\n  },\n  methods: {\n    goEdit(roleId) {\n      console.log('去编辑')\n      this.$router.push({\n        path: '/addRole',\n        query: {\n          roleId\n        }\n      })\n    },\n    async highLightPerms(roleId) {\n      // 1. 使用id获取高亮权限点列表\n      const res = await getRoleDetailAPI(roleId)\n      const perms = res.data.perms\n      // 2. 遍历tree实例组成的数组 分别调用它身上的高亮方法 传入需要高亮的权限点数据\n      this.$refs.tree.forEach((treeInstance, index) => {\n        treeInstance.setCheckedKeys(perms[index])\n      })\n    },\n    async getUserMember(roleId) {\n      // 实现成员列表的接口调用\n      const resMemeber = await getRoleUserAPI(roleId)\n      this.roleUserList = resMemeber.data.rows\n    },\n    async switchTab(index) {\n      this.currentIndex = index\n      // 拿到当前的角色id\n      const roleId = this.roleList[index].roleId\n      this.highLightPerms(roleId)\n      this.getUserMember(roleId)\n    },\n    async getRoleList() {\n      const res = await getRoleListAPI()\n      this.roleList = res.data\n    },\n    async getTreeList() {\n      const res = await getTreeListAPI()\n      // 直接赋值 没有disabled为true\n      // 思路: 针对于treeList中的每一项（每一层中的每一项）都动态添加一个disabled为true\n      this.treeList = res.data\n      // addDisabled(this.treeList)\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.role-container {\n  display: flex;\n  font-size: 14px;\n  background-color: #fff;\n  padding:10px;\n  .left-wrapper {\n    width: 200px;\n    border-right: 1px solid #e4e7ec;\n    padding: 4px;\n    text-align: center;\n\n    .role-item {\n      position: relative;\n      height: 56px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0 20px;\n      cursor: pointer;\n\n      &.active {\n        background: #edf5ff;\n        color: #4770ff;\n      }\n    }\n\n    .role-info {\n      display: flex;\n      align-items: center;\n\n      .icon {\n        margin-right: 10px;\n      }\n    }\n\n    .more {\n      display: flex;\n      align-items: center;\n    }\n    .addBtn{\n      width: 100%;\n      margin-top: 20px;\n    }\n  }\n\n  .right-wrapper {\n    flex: 1;\n\n    .tree-wrapper {\n      display: flex;\n      justify-content: space-between;\n\n      .tree-item {\n        flex: 1;\n        border-right: 1px solid #e4e7ec;\n        padding: 0px 4px;\n        text-align: center;\n        .tree-title {\n          background: #f5f7fa;\n          text-align: center;\n          padding: 10px 0;\n          margin-bottom: 12px;\n        }\n      }\n    }\n\n    ::v-deep .el-tabs__nav-wrap {\n      padding-left: 20px;\n    }\n\n    .user-wrapper{\n      padding:20px;\n    }\n  }\n}\n</style>\n"]}]}