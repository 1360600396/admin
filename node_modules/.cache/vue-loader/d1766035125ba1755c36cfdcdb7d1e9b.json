{"remainingRequest":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\src\\views\\Park\\Enterprise\\AddEnterprise.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\src\\views\\Park\\Enterprise\\AddEnterprise.vue","mtime":1704167261088},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1714140753088},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1714140751623},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1714140753088},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1714140753454}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHVwZGF0ZUVudGVycHJpc2VBUEksIGdldEluZHVzdHJ5TGlzdEFQSSwgY3JlYXRlRW50ZXJwcmlzZUFQSSwgZ2V0RW50ZXJwcmlzZURldGFpbEFQSSB9IGZyb20gJ0AvYXBpL3BhcmsnCmltcG9ydCB7IHVwbG9hZEFQSSB9IGZyb20gJ0AvYXBpL2NvbW1vbicKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICBjb25zdCB2YWxpZGF0ZVBob25lID0gKHJ1bGUsIHZhbHVlLCBjYikgPT4gewogICAgICBpZiAoL14xWzMtOV1cZHs5fSQvLnRlc3QodmFsdWUpKSB7CiAgICAgICAgY2IoKQogICAgICB9IGVsc2UgewogICAgICAgIGNiKG5ldyBFcnJvcign6K+36L6T5YWl5q2j56Gu5omL5py65Y+3JykpCiAgICAgIH0KICAgIH0KICAgIHJldHVybiB7CiAgICAgIGFkZEZvcm06IHsKICAgICAgICBuYW1lOiAnJywgLy8g5LyB5Lia5ZCN56ewCiAgICAgICAgbGVnYWxQZXJzb246ICcnLCAvLyDms5XkuroKICAgICAgICByZWdpc3RlcmVkQWRkcmVzczogJycsIC8vIOazqOWGjOWcsOWdgAogICAgICAgIGluZHVzdHJ5Q29kZTogJycsIC8vIOaJgOWcqOihjOS4mgogICAgICAgIGNvbnRhY3Q6ICcnLCAvLyDkvIHkuJrogZTns7vkuroKICAgICAgICBjb250YWN0TnVtYmVyOiAnJywgLy8g6IGU57O75Lq655S16K+dCiAgICAgICAgYnVzaW5lc3NMaWNlbnNlVXJsOiAnJywgLy8g6JCl5Lia5omn54WndXJsCiAgICAgICAgYnVzaW5lc3NMaWNlbnNlSWQ6ICcnIC8vIOiQpeS4muaJp+eFp2lkCiAgICAgIH0sCiAgICAgIGFkZFJ1bGVzOiB7CiAgICAgICAgbmFtZTogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+S8geS4muWQjeensOS4uuW/heWhqycsIHRyaWdnZXI6ICdibHVyJyB9CiAgICAgICAgXSwKICAgICAgICBsZWdhbFBlcnNvbjogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+azleS6uuS4uuW/heWhqycsIHRyaWdnZXI6ICdibHVyJyB9CiAgICAgICAgXSwKICAgICAgICByZWdpc3RlcmVkQWRkcmVzczogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+azqOWGjOWcsOWdgOS4uuW/heWhqycsIHRyaWdnZXI6ICdibHVyJyB9CiAgICAgICAgXSwKICAgICAgICBpbmR1c3RyeUNvZGU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfmiYDlnKjooYzkuJrkuLrlv4XloasnLCB0cmlnZ2VyOiAnYmx1cicgfQogICAgICAgIF0sCiAgICAgICAgY29udGFjdDogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+S8geS4muiBlOezu+S6uuS4uuW/heWhqycsIHRyaWdnZXI6ICdibHVyJyB9CiAgICAgICAgXSwKICAgICAgICBjb250YWN0TnVtYmVyOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn5LyB5Lia6IGU57O75Lq655S16K+d5Li65b+F5aGrJywgdHJpZ2dlcjogJ2JsdXInIH0sCiAgICAgICAgICB7IHZhbGlkYXRvcjogdmFsaWRhdGVQaG9uZSwgdHJpZ2dlcjogJ2JsdXInIH0KICAgICAgICBdLAogICAgICAgIGJ1c2luZXNzTGljZW5zZUlkOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+35LiK5Lyg6JCl5Lia5omn54WnJywgdHJpZ2dlcjogJ2JsdXInIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgIGluZHVzdHJ5TGlzdDogW10gLy8g6KGM5Lia5YiX6KGoCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgaWQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRyb3V0ZS5xdWVyeS5pZAogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIC8vIOaooeeJiOeahOa4suafk+S8muetieW+hei/meS4quaOpeWPo+i/lOWbnuWQl++8nwogICAgLy8g5LiN5pivCiAgICAvLyDpppblhYjkvJrku6VkYXRh5Lit6buY6K6k55qE5pWw5o2u5a6M5oiQ56ys5LiA5qyh5riy5p+TCiAgICAvLyDnrYnliLDmjqXlj6PmlbDmja7ov5Tlm57kuYvlkI4g55Sx5LqO5ZON5bqU5byP5pWw5o2u55qE5Y+Y5YyWIOinhuWbvuS8mui3n+edgOS4gOi1t+WPmCDlrozmiJDkuozmrKHmuLLmn5MKICAgIHRoaXMuZ2V0SW5kdXN0cnlMaXN0KCkKICAgIGlmICh0aGlzLmlkKSB7CiAgICAgIHRoaXMuZ2V0RGV0YWlsKCkKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGdldERldGFpbCgpIHsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgZ2V0RW50ZXJwcmlzZURldGFpbEFQSSh0aGlzLmlkKQogICAgICB0aGlzLmFkZEZvcm0gPSByZXMuZGF0YQogICAgfSwKICAgIC8vIOiBmueEpuaXtuWHuuWPkQogICAgc2VsZWN0Rm9jdXMoKSB7CiAgICAgIHRoaXMuZ2V0SW5kdXN0cnlMaXN0KCkKICAgIH0sCiAgICAvLyDojrflj5booYzkuJrliJfooagKICAgIGFzeW5jIGdldEluZHVzdHJ5TGlzdCgpIHsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgZ2V0SW5kdXN0cnlMaXN0QVBJKCkKICAgICAgdGhpcy5pbmR1c3RyeUxpc3QgPSByZXMuZGF0YQogICAgfSwKICAgIGFzeW5jIHVwbG9hZChyZXMpIHsKICAgICAgY29uc29sZS5sb2cocmVzKQogICAgICAvLyBmaWxl77ya6KaB5LiK5Lyg57uZ5ZCO56uv5o6l5Y+j55qE5paH5Lu25a+56LGhCiAgICAgIGNvbnN0IHsgZmlsZSB9ID0gcmVzCiAgICAgIC8vIOS4iuS8oOaWh+S7tgogICAgICAvLyAxLiDmjInnhafmjqXlj6PopoHmsYLlh4blpIfkuIDkuKrnrKblkIjnsbvlnovnmoRmb3JtRGF0YeWvueixoSDnhLblkI7miorlj4LmlbDliqDlhaXov5vljrsKICAgICAgY29uc3QgZmQgPSBuZXcgRm9ybURhdGEoKSAvLyBmb3JtRGF0YeWunuS+i+WvueixoSDlhoXpg6jmmK/nqbrnmoQKICAgICAgZmQuYXBwZW5kKCdmaWxlJywgZmlsZSkKICAgICAgZmQuYXBwZW5kKCd0eXBlJywgJ2J1c2luZXNzTGljZW5zZScpCiAgICAgIC8vIDIuIOiwg+eUqOaOpeWPowogICAgICBjb25zdCBfcmVzID0gYXdhaXQgdXBsb2FkQVBJKGZkKQogICAgICB0aGlzLmFkZEZvcm0uYnVzaW5lc3NMaWNlbnNlSWQgPSBfcmVzLmRhdGEuaWQKICAgICAgdGhpcy5hZGRGb3JtLmJ1c2luZXNzTGljZW5zZVVybCA9IF9yZXMuZGF0YS51cmwKICAgICAgLy8g5LiK5Lyg5LmL5ZCO5a+56JCl5Lia5omn54WnaWTlgZrmoKHpqowo5L+d6K+B5YWI5LiK5Lyg5a6M5q+VIOi1i+WAvOaIkOWKn+S5i+WQjiDlho3lgZrmoKHpqowpCiAgICAgIC8qKgogICAgICAgMS4g5Li65LuA5LmI6KaB5Y2V54us5a+56L+Z5Liq5LiK5Lyg5YGa5qCh6aqM77yfCiAgICAgICAgICDkuIrkvKDnu4Tku7blnKjkuIrkvKDlrozmr5XkuYvlkI4g5bey57uP5pyJ5Zu+54mH5LqGIOS9huaYr+mUmeivr+aPkOekuuayoeaciea2iOWkseaOiQogICAgICAgICAgZWwtZm9ybee7hOS7tuagoemqjOmAu+i+kemHjOmdoiAgZWwtaW5wdXQgZWwtc2VsZWN0IOW9k+acieWAvOS5i+WQjuS8muiHquWKqOWujOaIkOagoemqjAoKICAgICAgIDIuIOaAjuS5iOWBmu+8nwogICAgICAgICAgdmFsaWRhdGVGaWVsZCAg6KGo5Y2V57uE5Lu255qE5a6e5L6L5pa55rOVIOWPguaVsOimgeWNleeLrOagoemqjOWTquS4quWtl+autSDlsLHmiorlroPkvKDlhaUKICAgICAgICAgIOmAmui/h+aIkeS7rOS8oOWFpeeahOWtl+autSDljrvoh6rliqjmn6Xmib7lvZPliY3lrZfmrrXmmK/lkKbnrKblkIjop4TliJnopoHmsYIg5aaC5p6c56ym5ZCIIOa4heepuumUmeivr+aPkOekugogICAgICAgKi8KICAgICAgdGhpcy4kcmVmcy5ydWxlRm9ybS52YWxpZGF0ZUZpZWxkKCdidXNpbmVzc0xpY2Vuc2VJZCcpCiAgICB9LAogICAgYmVmb3JlVXBsb2FkKGZpbGUpIHsKICAgICAgY29uc29sZS5sb2coZmlsZSkKICAgICAgY29uc3QgaXNQTkcgPSBmaWxlLnR5cGUgPT09ICdpbWFnZS9wbmcnCiAgICAgIGNvbnN0IGlzTHQ1TSA9IGZpbGUuc2l6ZSAvIDEwMjQgLyAxMDI0IDwgNQoKICAgICAgaWYgKCFpc1BORykgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+S4iuS8oOWQiOWQjOaWh+S7tuWPquiDveaYryBQTkcg5qC85byPIScpCiAgICAgIH0KICAgICAgaWYgKCFpc0x0NU0pIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfkuIrkvKDlkIjlkIzmlofku7blpKflsI/kuI3og73otoXov4c1TUIhJykKICAgICAgfQogICAgICByZXR1cm4gaXNQTkcgJiYgaXNMdDVNCiAgICB9LAogICAgY29uZmlybUFkZCgpIHsKICAgICAgdGhpcy4kcmVmcy5ydWxlRm9ybS52YWxpZGF0ZShhc3luYyB2YWxpZCA9PiB7CiAgICAgICAgaWYgKHZhbGlkKSB7CiAgICAgICAgICAvLyBUT0RPCiAgICAgICAgICBpZiAodGhpcy5pZCkgewogICAgICAgICAgICAvLyDmm7TmlrDmjqXlj6MKICAgICAgICAgICAgY29uc3QgewogICAgICAgICAgICAgIG5hbWUsIGlkLCBsZWdhbFBlcnNvbiwgcmVnaXN0ZXJlZEFkZHJlc3MsIGluZHVzdHJ5Q29kZSwgYnVzaW5lc3NMaWNlbnNlSWQsCiAgICAgICAgICAgICAgYnVzaW5lc3NMaWNlbnNlVXJsLCBjb250YWN0LCBjb250YWN0TnVtYmVyCiAgICAgICAgICAgIH0gPSB0aGlzLmFkZEZvcm0KICAgICAgICAgICAgYXdhaXQgdXBkYXRlRW50ZXJwcmlzZUFQSSh7CiAgICAgICAgICAgICAgbmFtZSwgaWQsIGxlZ2FsUGVyc29uLCByZWdpc3RlcmVkQWRkcmVzcywgaW5kdXN0cnlDb2RlLCBidXNpbmVzc0xpY2Vuc2VJZCwKICAgICAgICAgICAgICBidXNpbmVzc0xpY2Vuc2VVcmwsIGNvbnRhY3QsIGNvbnRhY3ROdW1iZXIKICAgICAgICAgICAgfSkKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGF3YWl0IGNyZWF0ZUVudGVycHJpc2VBUEkodGhpcy5hZGRGb3JtKQogICAgICAgICAgfQoKICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcyhgJHt0aGlzLmlkID8gJ+abtOaWsOaIkOWKnycgOiAn5paw5aKe5oiQ5YqfJ31gKQogICAgICAgICAgdGhpcy4kcm91dGVyLmJhY2soKQogICAgICAgIH0KICAgICAgfSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["AddEnterprise.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"AddEnterprise.vue","sourceRoot":"src/views/Park/Enterprise","sourcesContent":["<template>\n  <div class=\"add-enterprise\">\n    <header class=\"add-header\">\n      <div class=\"left\">\n        <span class=\"arrow\" @click=\"$router.back()\"><i class=\"el-icon-arrow-left\" />返回</span>\n        <span>|</span>\n        <span>{{ id?'编辑企业':'添加企业' }}</span>\n      </div>\n      <div class=\"right\">\n        黑马程序员\n      </div>\n    </header>\n    <main class=\"add-main\">\n      <div class=\"form-container\">\n        <div class=\"title\">企业信息</div>\n        <div class=\"form\">\n          <el-form ref=\"ruleForm\" :model=\"addForm\" :rules=\"addRules\" label-width=\"100px\">\n            <el-form-item label=\"企业名称\" prop=\"name\">\n              <el-input v-model=\"addForm.name\" />\n            </el-form-item>\n            <el-form-item label=\"法人\" prop=\"legalPerson\">\n              <el-input v-model=\"addForm.legalPerson\" />\n            </el-form-item>\n            <el-form-item label=\"注册地址\" prop=\"registeredAddress\">\n              <el-input v-model=\"addForm.registeredAddress\" />\n            </el-form-item>\n            <el-form-item label=\"所在行业\" prop=\"industryCode\">\n              <el-select v-model=\"addForm.industryCode\" @focus=\"selectFocus\">\n                <el-option\n                  v-for=\"item in industryList\"\n                  :key=\"item.industryCode\"\n                  :value=\"item.industryCode\"\n                  :label=\"item.industryName\"\n                />\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"企业联系人\" prop=\"contact\">\n              <el-input v-model=\"addForm.contact\" />\n            </el-form-item>\n            <el-form-item label=\"联系电话\" prop=\"contactNumber\">\n              <el-input v-model=\"addForm.contactNumber\" />\n            </el-form-item>\n            <el-form-item label=\"营业执照\" prop=\"businessLicenseId\">\n              <!--\n                action本来是一个用来配置默认上传的接口地址的\n                因为我们覆盖了 所以用一个#占个位置 消除必填警告\n\n                input type=\"file\" 本身具备选择文件的能力\n                覆盖原因: 默认的配置上传不够灵活 仅支持一些简单的上传 如果想要完全自定义上传行为 http-request\n\n                在选择文件之后 自动执行upload函数 并且把一个对象给到我们 对象中有一个file属性 就是我们要上传的文件对象\n\n                上传前校验\n                 1. 上传图片之前加一层校验 目的为了限制用户上传的文件类型和大小\n                 2. 如果我们添加了before-upload这个属性方法 这个函数中必须return的数据为true\n                 才会继续执行 upload 方法 如果校验不过 暂停执行 不会走上传逻辑\n                 3. file对象中俩个属性\n                    size  文件大小 /1024/1024 = M\n                    type  文件类型 image/文件类型\n               -->\n              <el-upload\n                class=\"upload-demo\"\n                action=\"#\"\n                :http-request=\"upload\"\n                :before-upload=\"beforeUpload\"\n              >\n                <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n                <div slot=\"tip\" class=\"el-upload__tip\">只能上传png图片，且不超过5M</div>\n              </el-upload>\n              <img :src=\"addForm.businessLicenseUrl\" alt=\"\" class=\"img\">\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n    </main>\n    <footer class=\"add-footer\">\n      <div class=\"btn-container\">\n        <el-button>重置</el-button>\n        <el-button type=\"primary\" @click=\"confirmAdd\">确定</el-button>\n      </div>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport { updateEnterpriseAPI, getIndustryListAPI, createEnterpriseAPI, getEnterpriseDetailAPI } from '@/api/park'\nimport { uploadAPI } from '@/api/common'\nexport default {\n  data() {\n    const validatePhone = (rule, value, cb) => {\n      if (/^1[3-9]\\d{9}$/.test(value)) {\n        cb()\n      } else {\n        cb(new Error('请输入正确手机号'))\n      }\n    }\n    return {\n      addForm: {\n        name: '', // 企业名称\n        legalPerson: '', // 法人\n        registeredAddress: '', // 注册地址\n        industryCode: '', // 所在行业\n        contact: '', // 企业联系人\n        contactNumber: '', // 联系人电话\n        businessLicenseUrl: '', // 营业执照url\n        businessLicenseId: '' // 营业执照id\n      },\n      addRules: {\n        name: [\n          { required: true, message: '企业名称为必填', trigger: 'blur' }\n        ],\n        legalPerson: [\n          { required: true, message: '法人为必填', trigger: 'blur' }\n        ],\n        registeredAddress: [\n          { required: true, message: '注册地址为必填', trigger: 'blur' }\n        ],\n        industryCode: [\n          { required: true, message: '所在行业为必填', trigger: 'blur' }\n        ],\n        contact: [\n          { required: true, message: '企业联系人为必填', trigger: 'blur' }\n        ],\n        contactNumber: [\n          { required: true, message: '企业联系人电话为必填', trigger: 'blur' },\n          { validator: validatePhone, trigger: 'blur' }\n        ],\n        businessLicenseId: [\n          { required: true, message: '请上传营业执照', trigger: 'blur' }\n        ]\n      },\n      industryList: [] // 行业列表\n    }\n  },\n  computed: {\n    id() {\n      return this.$route.query.id\n    }\n  },\n  mounted() {\n    // 模版的渲染会等待这个接口返回吗？\n    // 不是\n    // 首先会以data中默认的数据完成第一次渲染\n    // 等到接口数据返回之后 由于响应式数据的变化 视图会跟着一起变 完成二次渲染\n    this.getIndustryList()\n    if (this.id) {\n      this.getDetail()\n    }\n  },\n  methods: {\n    async getDetail() {\n      const res = await getEnterpriseDetailAPI(this.id)\n      this.addForm = res.data\n    },\n    // 聚焦时出发\n    selectFocus() {\n      this.getIndustryList()\n    },\n    // 获取行业列表\n    async getIndustryList() {\n      const res = await getIndustryListAPI()\n      this.industryList = res.data\n    },\n    async upload(res) {\n      console.log(res)\n      // file：要上传给后端接口的文件对象\n      const { file } = res\n      // 上传文件\n      // 1. 按照接口要求准备一个符合类型的formData对象 然后把参数加入进去\n      const fd = new FormData() // formData实例对象 内部是空的\n      fd.append('file', file)\n      fd.append('type', 'businessLicense')\n      // 2. 调用接口\n      const _res = await uploadAPI(fd)\n      this.addForm.businessLicenseId = _res.data.id\n      this.addForm.businessLicenseUrl = _res.data.url\n      // 上传之后对营业执照id做校验(保证先上传完毕 赋值成功之后 再做校验)\n      /**\n       1. 为什么要单独对这个上传做校验？\n          上传组件在上传完毕之后 已经有图片了 但是错误提示没有消失掉\n          el-form组件校验逻辑里面  el-input el-select 当有值之后会自动完成校验\n\n       2. 怎么做？\n          validateField  表单组件的实例方法 参数要单独校验哪个字段 就把它传入\n          通过我们传入的字段 去自动查找当前字段是否符合规则要求 如果符合 清空错误提示\n       */\n      this.$refs.ruleForm.validateField('businessLicenseId')\n    },\n    beforeUpload(file) {\n      console.log(file)\n      const isPNG = file.type === 'image/png'\n      const isLt5M = file.size / 1024 / 1024 < 5\n\n      if (!isPNG) {\n        this.$message.error('上传合同文件只能是 PNG 格式!')\n      }\n      if (!isLt5M) {\n        this.$message.error('上传合同文件大小不能超过5MB!')\n      }\n      return isPNG && isLt5M\n    },\n    confirmAdd() {\n      this.$refs.ruleForm.validate(async valid => {\n        if (valid) {\n          // TODO\n          if (this.id) {\n            // 更新接口\n            const {\n              name, id, legalPerson, registeredAddress, industryCode, businessLicenseId,\n              businessLicenseUrl, contact, contactNumber\n            } = this.addForm\n            await updateEnterpriseAPI({\n              name, id, legalPerson, registeredAddress, industryCode, businessLicenseId,\n              businessLicenseUrl, contact, contactNumber\n            })\n          } else {\n            await createEnterpriseAPI(this.addForm)\n          }\n\n          this.$message.success(`${this.id ? '更新成功' : '新增成功'}`)\n          this.$router.back()\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.add-enterprise {\n  background-color: #f4f6f8;\n  height: 100vh;\n\n  .add-header {\n    display: flex;\n    justify-content: space-between;\n    padding: 0 20px;\n    height: 64px;\n    line-height: 64px;\n    font-size: 16px;\n    font-weight: bold;\n    background-color: #fff;\n\n    .left {\n      span {\n        margin-right: 4px;\n      }\n      .arrow{\n        cursor: pointer;\n      }\n    }\n\n    .right {\n      text-align: right;\n    }\n  }\n\n  .add-main {\n    background: #f4f6f8;\n    padding: 20px 130px;\n\n    .form-container {\n      background-color: #fff;\n      .title {\n        height: 60px;\n        line-height: 60px;\n        padding-left:20px;\n      }\n      .form {\n        margin-bottom: 20px;\n        padding: 20px 65px 24px;\n        .el-form{\n          display: flex;\n          flex-wrap: wrap;\n          .el-form-item{\n            width: 50%;\n          }\n        }\n      }\n    }\n  }\n\n  .add-footer {\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n    padding: 24px 50px;\n    color: #000000d9;\n    font-size: 14px;\n    background: #fff;\n    text-align: center;\n  }\n  .img{\n    width: 150px;\n    height: 150px;\n    border-radius: 4px;\n  }\n}\n</style>\n"]}]}