{"remainingRequest":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\src\\views\\Park\\Enterprise\\index.vue?vue&type=style&index=0&id=6a5a85ff&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\src\\views\\Park\\Enterprise\\index.vue","mtime":1704167260836},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1714140750111},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1714140755034},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1714140753336},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1714140750590},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1714140753088},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1714140753454}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZGVwYXJ0bWVudC1jb250YWluZXIgewogIHBhZGRpbmc6IDEwcHg7Cn0KCi5zZWFyY2gtY29udGFpbmVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYigyMzcsIDIzNywgMjM3LCAuOSk7CiAgOwogIHBhZGRpbmctYm90dG9tOiAyMHB4OwoKICAuc2VhcmNoLWxhYmVsIHsKICAgIHdpZHRoOiAxMDBweDsKICB9CgogIC5zZWFyY2gtbWFpbiB7CiAgICB3aWR0aDogMjIwcHg7CiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7CiAgfQp9Ci5jcmVhdGUtY29udGFpbmVyewogIG1hcmdpbjogMTBweCAwcHg7Cn0KLnBhZ2UtY29udGFpbmVyewogIHBhZGRpbmc6NHB4IDBweDsKICB0ZXh0LWFsaWduOiByaWdodDsKfQouZm9ybS1jb250YWluZXJ7CiAgcGFkZGluZzowcHggODBweDsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+UA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/Park/Enterprise","sourcesContent":["<template>\n  <div class=\"building-container\">\n    <!-- 搜索区域 -->\n    <div class=\"search-container\">\n      <div class=\"search-label\">企业名称：</div>\n      <!--\n        分页 页数位于子组件内部 父组件如果想要用 子传父去获取 @current-change='pageChange'\n        清除 叉号位于子组件中 点击叉号时去通知父组件我现在给你清空了 你去做事儿吧 @clear\n\n        子传父的本质: 子组件通过调用父组件中的某个方法 通知它做个事儿\n       -->\n      <el-input v-model=\"params.name\" clearable placeholder=\"请输入内容\" class=\"search-main\" @clear=\"clearSearch\" />\n      <el-button type=\"primary\" @click=\"doSearch\">查询</el-button>\n    </div>\n    <div class=\"create-container\">\n      <el-button v-btn-auth=\"'park:enterprise:add_edit'\" type=\"primary\" @click=\"$router.push('/addEnterprise')\">添加企业</el-button>\n      <el-button v-btn-auth=\"'park:enterprise:remove'\" type=\"primary\" @click=\"$router.push('/addEnterprise')\">删除企业</el-button>\n\n      <auth-btn btn-perm=\"park:enterprise:remove\">\n        <el-button>添加</el-button>\n      </auth-btn>\n    </div>\n    <!-- 表格区域 -->\n    <div class=\"table\">\n      <el-table style=\"width: 100%\" :data=\"list\" @expand-change=\"expandChange\">\n        <el-table-column type=\"expand\">\n          <template #default=\"{row}\">\n            <el-table :data=\"row.rentList\">\n              <el-table-column label=\"租赁楼宇\" width=\"320\" prop=\"buildingName\" />\n              <el-table-column label=\"租赁起始时间\" prop=\"startTime\" />\n              <el-table-column label=\"合同状态\">\n                <template #default=\"scope\">\n                  <!--\n                    差值表达式支持函数调用吗？支持\n                    调用一个函数的时候 差值表达式的位置渲染的是什么？ 函数执行之后的返回值\n                   -->\n                  <el-tag :type=\"formatInfoType(scope.row.status)\"> {{ formatStatus(scope.row.status) }}</el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"操作\" width=\"180\">\n                <!--\n                  退租：如果当前是退租的状态 禁用  如果不是退租的状态 启用\n                  删除：只有已退租的时候 删除才是启用的 否则就是禁用的\n                 -->\n                <template #default=\"scope\">\n                  <el-button size=\"mini\" :disabled=\"scope.row.status === 3\" type=\"text\" @click=\"outRent(scope.row.id)\">退租</el-button>\n                  <el-button size=\"mini\" :disabled=\"scope.row.status !== 3\" type=\"text\">删除</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n          </template>\n        </el-table-column>\n        <el-table-column type=\"index\" label=\"序号\" />\n        <el-table-column label=\"企业名称\" width=\"320\" prop=\"name\" />\n        <el-table-column label=\"联系人\" prop=\"contact\" />\n        <el-table-column\n          label=\"联系电话\"\n          prop=\"contactNumber\"\n        />\n        <el-table-column label=\"操作\">\n          <template #default=\"{row}\">\n            <el-button size=\"mini\" type=\"text\" @click=\"addRent(row.id)\">添加合同</el-button>\n            <el-button size=\"mini\" type=\"text\" @click=\"lookRent(row.id)\">查看</el-button>\n            <el-button size=\"mini\" type=\"text\" @click=\"editEnterprise(row.id)\">编辑</el-button>\n            <el-button size=\"mini\" type=\"text\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <!-- 分页器 -->\n    <!--\n      1. 页数分出来  页数 = 总数 / 每页条数  total  pageSize\n      2. 点击页数获取数据  @current-change=\"pageChange\"  page 请求数据\n     -->\n    <div class=\"page-container\">\n      <el-pagination\n        layout=\"total, prev, pager, next\"\n        :total=\"total\"\n        :page-size=\"params.pageSize\"\n        @current-change=\"pageChange\"\n      />\n    </div>\n    <!-- 添加合同弹框 -->\n    <el-dialog\n      title=\"添加合同\"\n      :visible=\"dialogVisible\"\n      width=\"580px\"\n      @close=\"closeDialog\"\n      @open=\"openDialog\"\n    >\n      <!-- 默认插槽 -->\n      <div class=\"form-container\">\n        <el-form ref=\"addForm\" :model=\"rentForm\" :rules=\"rentRules\" label-position=\"top\">\n          <el-form-item label=\"租赁楼宇\" prop=\"buildingId\">\n            <el-select v-model=\"rentForm.buildingId\" placeholder=\"请选择\">\n              <el-option\n                v-for=\"item in buildingList\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item.id\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"租赁起止日期\" prop=\"rentTime\">\n            <el-date-picker\n              v-model=\"rentForm.rentTime\"\n              type=\"daterange\"\n              range-separator=\"至\"\n              start-placeholder=\"开始日期\"\n              end-placeholder=\"结束日期\"\n              value-format=\"yyyy-MM-dd\"\n            />\n          </el-form-item>\n          <el-form-item label=\"租赁合同\" prop=\"contractId\">\n            <!--\n              上传实现流程：\n                1. el-upload 打开本地文件 并且校验这个文件是否符合要求 - File\n                2. :http-request = 'upload'\n                3. 按照接口的要求格式 得到类型为FormData的对象  new FormData()\n                4. 按照要求往formData中添加字段数据 fd.append('字段名', '字段值')\n                5. 调用上传接口\n                6. 拿到返回的文件地址和其他有用的信息id 存入data中的响应式数据的位置 将来提交表单\n             -->\n            <el-upload\n              ref=\"uploadRef\"\n              action=\"#\"\n              :http-request=\"upload\"\n            >\n              <el-button size=\"small\" type=\"primary\" plain>上传合同文件</el-button>\n              <div slot=\"tip\" class=\"el-upload__tip\">支持扩展名：.doc .docx .pdf, 文件大小不超过5M</div>\n            </el-upload>\n          </el-form-item>\n        </el-form>\n      </div>\n      <template #footer>\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"confirmAdd\">确 定</el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { getListAPI, addRentAPI, getRentListAPI, outRentAPI } from '@/api/park'\nimport { getBuildingRentListAPI } from '@/api/building'\nimport { uploadAPI } from '@/api/common'\nexport default {\n  data() {\n    return {\n      list: [], // 企业列表\n      params: {\n        name: '',\n        page: 1,\n        pageSize: 10\n      },\n      total: 0,\n      dialogVisible: false, // 控制弹框打开和关闭\n      rentForm: {\n        buildingId: null, // 楼宇id\n        contractId: null, // 合同id\n        contractUrl: '', // 合同Url\n        enterpriseId: null, // 企业名称\n        type: 0, // 合同类型\n        rentTime: [] // 合同时间\n      },\n      rentRules: {\n        buildingId: [\n          { required: true, message: '请选择楼宇', trigger: 'change' }\n        ],\n        rentTime: [\n          { required: true, message: '请选择租赁日期', trigger: 'change' }\n        ],\n        contractId: [\n          { required: true, message: '请上传合同文件' }\n        ]\n      },\n      buildingList: [] // 楼宇列表\n    }\n  },\n  mounted() {\n    this.getList()\n  },\n  methods: {\n    lookRent(id) {\n      this.$router.push({\n        path: '/enterpriseDetail',\n        query: {\n          id\n        }\n      })\n    },\n    async outRent(id) {\n      const res = await outRentAPI(id)\n    },\n    formatInfoType(status) {\n      const MAP = {\n        0: 'warning',\n        1: 'success',\n        2: 'info',\n        3: 'danger'\n      }\n      // return 格式化之后的中文显示\n      return MAP[status]\n    },\n    formatStatus(status) {\n      console.log(status)\n      const MAP = {\n        0: '待生效',\n        1: '生效中',\n        2: '已到期',\n        3: '已退租'\n      }\n      // return 格式化之后的中文显示\n      return MAP[status]\n    },\n    async expandChange(row, rows) {\n      console.log('展开了', row, rows)\n      // row: 当前行的对象\n      // rows: 当前展开行的对象数组\n      // 优化网络请求 只在打开时才去触发 核心：拿到当前是打开的条件 做判断\n      // 判断条件：第一个row是否能在第二个rows中找到 如果找到了 代表打开了 如果找不到 代表收起了\n      // find  findIndex\n      const item = rows.find(item => item.id === row.id)\n      console.log(item)\n      if (item) {\n        // 1. 先拿到当前行的数据\n        // 2. 使用当前行的企业数据 获取下面的合同列表接口\n        const res = await getRentListAPI(row.id)\n        // 3. 把拿到的合同列表存入企业对象中 但是row里面没有存放它的位置\n        // eslint-disable-next-line require-atomic-updates\n        row.rentList = res.data\n      }\n    },\n    confirmAdd() {\n      // 1. 表单校验\n      this.$refs.addForm.validate(valid => {\n        if (valid) {\n          // TODO API\n          // 2. 调用接口\n          // 处理参数\n          const { buildingId, contractId, contractUrl, type, enterpriseId } = this.rentForm\n          const reqData = {\n            buildingId, contractId, contractUrl, type, enterpriseId,\n            startTime: this.rentForm.rentTime[0],\n            endTime: this.rentForm.rentTime[1]\n          }\n          addRentAPI(reqData)\n          // 1. 弹框关闭\n          this.dialogVisible = false\n          // 2. 重置一下数据( resetFileds + 手动清除)\n          this.$refs.addForm.resetFields()\n          this.rentForm = {\n            buildingId: null, // 楼宇id\n            contractId: null, // 合同id\n            contractUrl: '', // 合同Url\n            enterpriseId: null, // 企业名称\n            type: 0, // 合同类型\n            rentTime: [] // 合同时间\n          }\n          this.$refs.uploadRef.clearFiles()\n          // 3. 重新拉取一下列表\n        }\n      })\n    },\n    async upload(res) {\n      console.log(res)\n      // 1. 把file对象存下来\n      const file = res.file\n      // 2. 处理formData\n      const fd = new FormData()\n      fd.append('file', file)\n      fd.append('type', 'contract')\n      // 3. 调用上传接口\n      const _res = await uploadAPI(fd)\n      // 4. 存入表单\n      this.rentForm.contractId = _res.data.id\n      this.rentForm.contractUrl = _res.data.url\n    },\n    // 获取楼宇下拉列表\n    async getBuildList() {\n      // 作为下拉列表\n      // 1. 单独的接口\n      // 2. 使用table列表的接口 - {page:1,pageSize:100}\n      const res = await getBuildingRentListAPI()\n      this.buildingList = res.data\n    },\n    // 添加合同\n    addRent(id) {\n      this.dialogVisible = true\n      // 把企业id存入表单对象\n      this.rentForm.enterpriseId = id\n    },\n    closeDialog() {\n      this.dialogVisible = false\n    },\n    openDialog() {\n      this.getBuildList()\n    },\n    async getList() {\n      // 1. 接口调用\n      const res = await getListAPI(this.params)\n      // 2. 数据赋值(针对于每一行数据初始化一个专门存放合同列表的位置)\n      this.list = res.data.rows.map(item => {\n        return {\n          ...item,\n          rentList: [] // 合同列表\n        }\n      })\n      this.total = res.data.total\n    },\n    // 分页\n    pageChange(page) {\n      this.params.page = page\n      this.getList()\n    },\n    doSearch() {\n      this.params.page = 1\n      this.getList()\n    },\n    clearSearch() {\n      console.log('清空了')\n      this.getList()\n    },\n    editEnterprise(id) {\n      this.$router.push({\n        path: '/addEnterprise',\n        query: {\n          id\n        }\n      })\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n.department-container {\n  padding: 10px;\n}\n\n.search-container {\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid rgb(237, 237, 237, .9);\n  ;\n  padding-bottom: 20px;\n\n  .search-label {\n    width: 100px;\n  }\n\n  .search-main {\n    width: 220px;\n    margin-right: 10px;\n  }\n}\n.create-container{\n  margin: 10px 0px;\n}\n.page-container{\n  padding:4px 0px;\n  text-align: right;\n}\n.form-container{\n  padding:0px 80px;\n}\n</style>\n"]}]}