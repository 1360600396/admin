{"remainingRequest":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\src\\views\\Park\\Enterprise\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\src\\views\\Park\\Enterprise\\index.vue","mtime":1704167260836},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1714140753088},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1714140751623},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1714140753088},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1714140753454}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldExpc3RBUEksIGFkZFJlbnRBUEksIGdldFJlbnRMaXN0QVBJLCBvdXRSZW50QVBJIH0gZnJvbSAnQC9hcGkvcGFyaycKaW1wb3J0IHsgZ2V0QnVpbGRpbmdSZW50TGlzdEFQSSB9IGZyb20gJ0AvYXBpL2J1aWxkaW5nJwppbXBvcnQgeyB1cGxvYWRBUEkgfSBmcm9tICdAL2FwaS9jb21tb24nCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbGlzdDogW10sIC8vIOS8geS4muWIl+ihqAogICAgICBwYXJhbXM6IHsKICAgICAgICBuYW1lOiAnJywKICAgICAgICBwYWdlOiAxLAogICAgICAgIHBhZ2VTaXplOiAxMAogICAgICB9LAogICAgICB0b3RhbDogMCwKICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2UsIC8vIOaOp+WItuW8ueahhuaJk+W8gOWSjOWFs+mXrQogICAgICByZW50Rm9ybTogewogICAgICAgIGJ1aWxkaW5nSWQ6IG51bGwsIC8vIOalvOWuh2lkCiAgICAgICAgY29udHJhY3RJZDogbnVsbCwgLy8g5ZCI5ZCMaWQKICAgICAgICBjb250cmFjdFVybDogJycsIC8vIOWQiOWQjFVybAogICAgICAgIGVudGVycHJpc2VJZDogbnVsbCwgLy8g5LyB5Lia5ZCN56ewCiAgICAgICAgdHlwZTogMCwgLy8g5ZCI5ZCM57G75Z6LCiAgICAgICAgcmVudFRpbWU6IFtdIC8vIOWQiOWQjOaXtumXtAogICAgICB9LAogICAgICByZW50UnVsZXM6IHsKICAgICAgICBidWlsZGluZ0lkOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36YCJ5oup5qW85a6HJywgdHJpZ2dlcjogJ2NoYW5nZScgfQogICAgICAgIF0sCiAgICAgICAgcmVudFRpbWU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fpgInmi6nnp5/otYHml6XmnJ8nLCB0cmlnZ2VyOiAnY2hhbmdlJyB9CiAgICAgICAgXSwKICAgICAgICBjb250cmFjdElkOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+35LiK5Lyg5ZCI5ZCM5paH5Lu2JyB9CiAgICAgICAgXQogICAgICB9LAogICAgICBidWlsZGluZ0xpc3Q6IFtdIC8vIOalvOWuh+WIl+ihqAogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0TGlzdCgpCiAgfSwKICBtZXRob2RzOiB7CiAgICBsb29rUmVudChpZCkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgcGF0aDogJy9lbnRlcnByaXNlRGV0YWlsJywKICAgICAgICBxdWVyeTogewogICAgICAgICAgaWQKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgYXN5bmMgb3V0UmVudChpZCkgewogICAgICBjb25zdCByZXMgPSBhd2FpdCBvdXRSZW50QVBJKGlkKQogICAgfSwKICAgIGZvcm1hdEluZm9UeXBlKHN0YXR1cykgewogICAgICBjb25zdCBNQVAgPSB7CiAgICAgICAgMDogJ3dhcm5pbmcnLAogICAgICAgIDE6ICdzdWNjZXNzJywKICAgICAgICAyOiAnaW5mbycsCiAgICAgICAgMzogJ2RhbmdlcicKICAgICAgfQogICAgICAvLyByZXR1cm4g5qC85byP5YyW5LmL5ZCO55qE5Lit5paH5pi+56S6CiAgICAgIHJldHVybiBNQVBbc3RhdHVzXQogICAgfSwKICAgIGZvcm1hdFN0YXR1cyhzdGF0dXMpIHsKICAgICAgY29uc29sZS5sb2coc3RhdHVzKQogICAgICBjb25zdCBNQVAgPSB7CiAgICAgICAgMDogJ+W+heeUn+aViCcsCiAgICAgICAgMTogJ+eUn+aViOS4rScsCiAgICAgICAgMjogJ+W3suWIsOacnycsCiAgICAgICAgMzogJ+W3sumAgOennycKICAgICAgfQogICAgICAvLyByZXR1cm4g5qC85byP5YyW5LmL5ZCO55qE5Lit5paH5pi+56S6CiAgICAgIHJldHVybiBNQVBbc3RhdHVzXQogICAgfSwKICAgIGFzeW5jIGV4cGFuZENoYW5nZShyb3csIHJvd3MpIHsKICAgICAgY29uc29sZS5sb2coJ+WxleW8gOS6hicsIHJvdywgcm93cykKICAgICAgLy8gcm93OiDlvZPliY3ooYznmoTlr7nosaEKICAgICAgLy8gcm93czog5b2T5YmN5bGV5byA6KGM55qE5a+56LGh5pWw57uECiAgICAgIC8vIOS8mOWMlue9kee7nOivt+axgiDlj6rlnKjmiZPlvIDml7bmiY3ljrvop6blj5Eg5qC45b+D77ya5ou/5Yiw5b2T5YmN5piv5omT5byA55qE5p2h5Lu2IOWBmuWIpOaWrQogICAgICAvLyDliKTmlq3mnaHku7bvvJrnrKzkuIDkuKpyb3fmmK/lkKbog73lnKjnrKzkuozkuKpyb3dz5Lit5om+5YiwIOWmguaenOaJvuWIsOS6hiDku6PooajmiZPlvIDkuoYg5aaC5p6c5om+5LiN5YiwIOS7o+ihqOaUtui1t+S6hgogICAgICAvLyBmaW5kICBmaW5kSW5kZXgKICAgICAgY29uc3QgaXRlbSA9IHJvd3MuZmluZChpdGVtID0+IGl0ZW0uaWQgPT09IHJvdy5pZCkKICAgICAgY29uc29sZS5sb2coaXRlbSkKICAgICAgaWYgKGl0ZW0pIHsKICAgICAgICAvLyAxLiDlhYjmi7/liLDlvZPliY3ooYznmoTmlbDmja4KICAgICAgICAvLyAyLiDkvb/nlKjlvZPliY3ooYznmoTkvIHkuJrmlbDmja4g6I635Y+W5LiL6Z2i55qE5ZCI5ZCM5YiX6KGo5o6l5Y+jCiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgZ2V0UmVudExpc3RBUEkocm93LmlkKQogICAgICAgIC8vIDMuIOaKiuaLv+WIsOeahOWQiOWQjOWIl+ihqOWtmOWFpeS8geS4muWvueixoeS4rSDkvYbmmK9yb3fph4zpnaLmsqHmnInlrZjmlL7lroPnmoTkvY3nva4KICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVxdWlyZS1hdG9taWMtdXBkYXRlcwogICAgICAgIHJvdy5yZW50TGlzdCA9IHJlcy5kYXRhCiAgICAgIH0KICAgIH0sCiAgICBjb25maXJtQWRkKCkgewogICAgICAvLyAxLiDooajljZXmoKHpqowKICAgICAgdGhpcy4kcmVmcy5hZGRGb3JtLnZhbGlkYXRlKHZhbGlkID0+IHsKICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgIC8vIFRPRE8gQVBJCiAgICAgICAgICAvLyAyLiDosIPnlKjmjqXlj6MKICAgICAgICAgIC8vIOWkhOeQhuWPguaVsAogICAgICAgICAgY29uc3QgeyBidWlsZGluZ0lkLCBjb250cmFjdElkLCBjb250cmFjdFVybCwgdHlwZSwgZW50ZXJwcmlzZUlkIH0gPSB0aGlzLnJlbnRGb3JtCiAgICAgICAgICBjb25zdCByZXFEYXRhID0gewogICAgICAgICAgICBidWlsZGluZ0lkLCBjb250cmFjdElkLCBjb250cmFjdFVybCwgdHlwZSwgZW50ZXJwcmlzZUlkLAogICAgICAgICAgICBzdGFydFRpbWU6IHRoaXMucmVudEZvcm0ucmVudFRpbWVbMF0sCiAgICAgICAgICAgIGVuZFRpbWU6IHRoaXMucmVudEZvcm0ucmVudFRpbWVbMV0KICAgICAgICAgIH0KICAgICAgICAgIGFkZFJlbnRBUEkocmVxRGF0YSkKICAgICAgICAgIC8vIDEuIOW8ueahhuWFs+mXrQogICAgICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gZmFsc2UKICAgICAgICAgIC8vIDIuIOmHjee9ruS4gOS4i+aVsOaNriggcmVzZXRGaWxlZHMgKyDmiYvliqjmuIXpmaQpCiAgICAgICAgICB0aGlzLiRyZWZzLmFkZEZvcm0ucmVzZXRGaWVsZHMoKQogICAgICAgICAgdGhpcy5yZW50Rm9ybSA9IHsKICAgICAgICAgICAgYnVpbGRpbmdJZDogbnVsbCwgLy8g5qW85a6HaWQKICAgICAgICAgICAgY29udHJhY3RJZDogbnVsbCwgLy8g5ZCI5ZCMaWQKICAgICAgICAgICAgY29udHJhY3RVcmw6ICcnLCAvLyDlkIjlkIxVcmwKICAgICAgICAgICAgZW50ZXJwcmlzZUlkOiBudWxsLCAvLyDkvIHkuJrlkI3np7AKICAgICAgICAgICAgdHlwZTogMCwgLy8g5ZCI5ZCM57G75Z6LCiAgICAgICAgICAgIHJlbnRUaW1lOiBbXSAvLyDlkIjlkIzml7bpl7QKICAgICAgICAgIH0KICAgICAgICAgIHRoaXMuJHJlZnMudXBsb2FkUmVmLmNsZWFyRmlsZXMoKQogICAgICAgICAgLy8gMy4g6YeN5paw5ouJ5Y+W5LiA5LiL5YiX6KGoCiAgICAgICAgfQogICAgICB9KQogICAgfSwKICAgIGFzeW5jIHVwbG9hZChyZXMpIHsKICAgICAgY29uc29sZS5sb2cocmVzKQogICAgICAvLyAxLiDmiopmaWxl5a+56LGh5a2Y5LiL5p2lCiAgICAgIGNvbnN0IGZpbGUgPSByZXMuZmlsZQogICAgICAvLyAyLiDlpITnkIZmb3JtRGF0YQogICAgICBjb25zdCBmZCA9IG5ldyBGb3JtRGF0YSgpCiAgICAgIGZkLmFwcGVuZCgnZmlsZScsIGZpbGUpCiAgICAgIGZkLmFwcGVuZCgndHlwZScsICdjb250cmFjdCcpCiAgICAgIC8vIDMuIOiwg+eUqOS4iuS8oOaOpeWPowogICAgICBjb25zdCBfcmVzID0gYXdhaXQgdXBsb2FkQVBJKGZkKQogICAgICAvLyA0LiDlrZjlhaXooajljZUKICAgICAgdGhpcy5yZW50Rm9ybS5jb250cmFjdElkID0gX3Jlcy5kYXRhLmlkCiAgICAgIHRoaXMucmVudEZvcm0uY29udHJhY3RVcmwgPSBfcmVzLmRhdGEudXJsCiAgICB9LAogICAgLy8g6I635Y+W5qW85a6H5LiL5ouJ5YiX6KGoCiAgICBhc3luYyBnZXRCdWlsZExpc3QoKSB7CiAgICAgIC8vIOS9nOS4uuS4i+aLieWIl+ihqAogICAgICAvLyAxLiDljZXni6znmoTmjqXlj6MKICAgICAgLy8gMi4g5L2/55SodGFibGXliJfooajnmoTmjqXlj6MgLSB7cGFnZToxLHBhZ2VTaXplOjEwMH0KICAgICAgY29uc3QgcmVzID0gYXdhaXQgZ2V0QnVpbGRpbmdSZW50TGlzdEFQSSgpCiAgICAgIHRoaXMuYnVpbGRpbmdMaXN0ID0gcmVzLmRhdGEKICAgIH0sCiAgICAvLyDmt7vliqDlkIjlkIwKICAgIGFkZFJlbnQoaWQpIHsKICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZQogICAgICAvLyDmiorkvIHkuJppZOWtmOWFpeihqOWNleWvueixoQogICAgICB0aGlzLnJlbnRGb3JtLmVudGVycHJpc2VJZCA9IGlkCiAgICB9LAogICAgY2xvc2VEaWFsb2coKSB7CiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IGZhbHNlCiAgICB9LAogICAgb3BlbkRpYWxvZygpIHsKICAgICAgdGhpcy5nZXRCdWlsZExpc3QoKQogICAgfSwKICAgIGFzeW5jIGdldExpc3QoKSB7CiAgICAgIC8vIDEuIOaOpeWPo+iwg+eUqAogICAgICBjb25zdCByZXMgPSBhd2FpdCBnZXRMaXN0QVBJKHRoaXMucGFyYW1zKQogICAgICAvLyAyLiDmlbDmja7otYvlgLwo6ZKI5a+55LqO5q+P5LiA6KGM5pWw5o2u5Yid5aeL5YyW5LiA5Liq5LiT6Zeo5a2Y5pS+5ZCI5ZCM5YiX6KGo55qE5L2N572uKQogICAgICB0aGlzLmxpc3QgPSByZXMuZGF0YS5yb3dzLm1hcChpdGVtID0+IHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgLi4uaXRlbSwKICAgICAgICAgIHJlbnRMaXN0OiBbXSAvLyDlkIjlkIzliJfooagKICAgICAgICB9CiAgICAgIH0pCiAgICAgIHRoaXMudG90YWwgPSByZXMuZGF0YS50b3RhbAogICAgfSwKICAgIC8vIOWIhumhtQogICAgcGFnZUNoYW5nZShwYWdlKSB7CiAgICAgIHRoaXMucGFyYW1zLnBhZ2UgPSBwYWdlCiAgICAgIHRoaXMuZ2V0TGlzdCgpCiAgICB9LAogICAgZG9TZWFyY2goKSB7CiAgICAgIHRoaXMucGFyYW1zLnBhZ2UgPSAxCiAgICAgIHRoaXMuZ2V0TGlzdCgpCiAgICB9LAogICAgY2xlYXJTZWFyY2goKSB7CiAgICAgIGNvbnNvbGUubG9nKCfmuIXnqbrkuoYnKQogICAgICB0aGlzLmdldExpc3QoKQogICAgfSwKICAgIGVkaXRFbnRlcnByaXNlKGlkKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBwYXRoOiAnL2FkZEVudGVycHJpc2UnLAogICAgICAgIHF1ZXJ5OiB7CiAgICAgICAgICBpZAogICAgICAgIH0KICAgICAgfSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/views/Park/Enterprise","sourcesContent":["<template>\n  <div class=\"building-container\">\n    <!-- 搜索区域 -->\n    <div class=\"search-container\">\n      <div class=\"search-label\">企业名称：</div>\n      <!--\n        分页 页数位于子组件内部 父组件如果想要用 子传父去获取 @current-change='pageChange'\n        清除 叉号位于子组件中 点击叉号时去通知父组件我现在给你清空了 你去做事儿吧 @clear\n\n        子传父的本质: 子组件通过调用父组件中的某个方法 通知它做个事儿\n       -->\n      <el-input v-model=\"params.name\" clearable placeholder=\"请输入内容\" class=\"search-main\" @clear=\"clearSearch\" />\n      <el-button type=\"primary\" @click=\"doSearch\">查询</el-button>\n    </div>\n    <div class=\"create-container\">\n      <el-button v-btn-auth=\"'park:enterprise:add_edit'\" type=\"primary\" @click=\"$router.push('/addEnterprise')\">添加企业</el-button>\n      <el-button v-btn-auth=\"'park:enterprise:remove'\" type=\"primary\" @click=\"$router.push('/addEnterprise')\">删除企业</el-button>\n\n      <auth-btn btn-perm=\"park:enterprise:remove\">\n        <el-button>添加</el-button>\n      </auth-btn>\n    </div>\n    <!-- 表格区域 -->\n    <div class=\"table\">\n      <el-table style=\"width: 100%\" :data=\"list\" @expand-change=\"expandChange\">\n        <el-table-column type=\"expand\">\n          <template #default=\"{row}\">\n            <el-table :data=\"row.rentList\">\n              <el-table-column label=\"租赁楼宇\" width=\"320\" prop=\"buildingName\" />\n              <el-table-column label=\"租赁起始时间\" prop=\"startTime\" />\n              <el-table-column label=\"合同状态\">\n                <template #default=\"scope\">\n                  <!--\n                    差值表达式支持函数调用吗？支持\n                    调用一个函数的时候 差值表达式的位置渲染的是什么？ 函数执行之后的返回值\n                   -->\n                  <el-tag :type=\"formatInfoType(scope.row.status)\"> {{ formatStatus(scope.row.status) }}</el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"操作\" width=\"180\">\n                <!--\n                  退租：如果当前是退租的状态 禁用  如果不是退租的状态 启用\n                  删除：只有已退租的时候 删除才是启用的 否则就是禁用的\n                 -->\n                <template #default=\"scope\">\n                  <el-button size=\"mini\" :disabled=\"scope.row.status === 3\" type=\"text\" @click=\"outRent(scope.row.id)\">退租</el-button>\n                  <el-button size=\"mini\" :disabled=\"scope.row.status !== 3\" type=\"text\">删除</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n          </template>\n        </el-table-column>\n        <el-table-column type=\"index\" label=\"序号\" />\n        <el-table-column label=\"企业名称\" width=\"320\" prop=\"name\" />\n        <el-table-column label=\"联系人\" prop=\"contact\" />\n        <el-table-column\n          label=\"联系电话\"\n          prop=\"contactNumber\"\n        />\n        <el-table-column label=\"操作\">\n          <template #default=\"{row}\">\n            <el-button size=\"mini\" type=\"text\" @click=\"addRent(row.id)\">添加合同</el-button>\n            <el-button size=\"mini\" type=\"text\" @click=\"lookRent(row.id)\">查看</el-button>\n            <el-button size=\"mini\" type=\"text\" @click=\"editEnterprise(row.id)\">编辑</el-button>\n            <el-button size=\"mini\" type=\"text\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <!-- 分页器 -->\n    <!--\n      1. 页数分出来  页数 = 总数 / 每页条数  total  pageSize\n      2. 点击页数获取数据  @current-change=\"pageChange\"  page 请求数据\n     -->\n    <div class=\"page-container\">\n      <el-pagination\n        layout=\"total, prev, pager, next\"\n        :total=\"total\"\n        :page-size=\"params.pageSize\"\n        @current-change=\"pageChange\"\n      />\n    </div>\n    <!-- 添加合同弹框 -->\n    <el-dialog\n      title=\"添加合同\"\n      :visible=\"dialogVisible\"\n      width=\"580px\"\n      @close=\"closeDialog\"\n      @open=\"openDialog\"\n    >\n      <!-- 默认插槽 -->\n      <div class=\"form-container\">\n        <el-form ref=\"addForm\" :model=\"rentForm\" :rules=\"rentRules\" label-position=\"top\">\n          <el-form-item label=\"租赁楼宇\" prop=\"buildingId\">\n            <el-select v-model=\"rentForm.buildingId\" placeholder=\"请选择\">\n              <el-option\n                v-for=\"item in buildingList\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item.id\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"租赁起止日期\" prop=\"rentTime\">\n            <el-date-picker\n              v-model=\"rentForm.rentTime\"\n              type=\"daterange\"\n              range-separator=\"至\"\n              start-placeholder=\"开始日期\"\n              end-placeholder=\"结束日期\"\n              value-format=\"yyyy-MM-dd\"\n            />\n          </el-form-item>\n          <el-form-item label=\"租赁合同\" prop=\"contractId\">\n            <!--\n              上传实现流程：\n                1. el-upload 打开本地文件 并且校验这个文件是否符合要求 - File\n                2. :http-request = 'upload'\n                3. 按照接口的要求格式 得到类型为FormData的对象  new FormData()\n                4. 按照要求往formData中添加字段数据 fd.append('字段名', '字段值')\n                5. 调用上传接口\n                6. 拿到返回的文件地址和其他有用的信息id 存入data中的响应式数据的位置 将来提交表单\n             -->\n            <el-upload\n              ref=\"uploadRef\"\n              action=\"#\"\n              :http-request=\"upload\"\n            >\n              <el-button size=\"small\" type=\"primary\" plain>上传合同文件</el-button>\n              <div slot=\"tip\" class=\"el-upload__tip\">支持扩展名：.doc .docx .pdf, 文件大小不超过5M</div>\n            </el-upload>\n          </el-form-item>\n        </el-form>\n      </div>\n      <template #footer>\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"confirmAdd\">确 定</el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { getListAPI, addRentAPI, getRentListAPI, outRentAPI } from '@/api/park'\nimport { getBuildingRentListAPI } from '@/api/building'\nimport { uploadAPI } from '@/api/common'\nexport default {\n  data() {\n    return {\n      list: [], // 企业列表\n      params: {\n        name: '',\n        page: 1,\n        pageSize: 10\n      },\n      total: 0,\n      dialogVisible: false, // 控制弹框打开和关闭\n      rentForm: {\n        buildingId: null, // 楼宇id\n        contractId: null, // 合同id\n        contractUrl: '', // 合同Url\n        enterpriseId: null, // 企业名称\n        type: 0, // 合同类型\n        rentTime: [] // 合同时间\n      },\n      rentRules: {\n        buildingId: [\n          { required: true, message: '请选择楼宇', trigger: 'change' }\n        ],\n        rentTime: [\n          { required: true, message: '请选择租赁日期', trigger: 'change' }\n        ],\n        contractId: [\n          { required: true, message: '请上传合同文件' }\n        ]\n      },\n      buildingList: [] // 楼宇列表\n    }\n  },\n  mounted() {\n    this.getList()\n  },\n  methods: {\n    lookRent(id) {\n      this.$router.push({\n        path: '/enterpriseDetail',\n        query: {\n          id\n        }\n      })\n    },\n    async outRent(id) {\n      const res = await outRentAPI(id)\n    },\n    formatInfoType(status) {\n      const MAP = {\n        0: 'warning',\n        1: 'success',\n        2: 'info',\n        3: 'danger'\n      }\n      // return 格式化之后的中文显示\n      return MAP[status]\n    },\n    formatStatus(status) {\n      console.log(status)\n      const MAP = {\n        0: '待生效',\n        1: '生效中',\n        2: '已到期',\n        3: '已退租'\n      }\n      // return 格式化之后的中文显示\n      return MAP[status]\n    },\n    async expandChange(row, rows) {\n      console.log('展开了', row, rows)\n      // row: 当前行的对象\n      // rows: 当前展开行的对象数组\n      // 优化网络请求 只在打开时才去触发 核心：拿到当前是打开的条件 做判断\n      // 判断条件：第一个row是否能在第二个rows中找到 如果找到了 代表打开了 如果找不到 代表收起了\n      // find  findIndex\n      const item = rows.find(item => item.id === row.id)\n      console.log(item)\n      if (item) {\n        // 1. 先拿到当前行的数据\n        // 2. 使用当前行的企业数据 获取下面的合同列表接口\n        const res = await getRentListAPI(row.id)\n        // 3. 把拿到的合同列表存入企业对象中 但是row里面没有存放它的位置\n        // eslint-disable-next-line require-atomic-updates\n        row.rentList = res.data\n      }\n    },\n    confirmAdd() {\n      // 1. 表单校验\n      this.$refs.addForm.validate(valid => {\n        if (valid) {\n          // TODO API\n          // 2. 调用接口\n          // 处理参数\n          const { buildingId, contractId, contractUrl, type, enterpriseId } = this.rentForm\n          const reqData = {\n            buildingId, contractId, contractUrl, type, enterpriseId,\n            startTime: this.rentForm.rentTime[0],\n            endTime: this.rentForm.rentTime[1]\n          }\n          addRentAPI(reqData)\n          // 1. 弹框关闭\n          this.dialogVisible = false\n          // 2. 重置一下数据( resetFileds + 手动清除)\n          this.$refs.addForm.resetFields()\n          this.rentForm = {\n            buildingId: null, // 楼宇id\n            contractId: null, // 合同id\n            contractUrl: '', // 合同Url\n            enterpriseId: null, // 企业名称\n            type: 0, // 合同类型\n            rentTime: [] // 合同时间\n          }\n          this.$refs.uploadRef.clearFiles()\n          // 3. 重新拉取一下列表\n        }\n      })\n    },\n    async upload(res) {\n      console.log(res)\n      // 1. 把file对象存下来\n      const file = res.file\n      // 2. 处理formData\n      const fd = new FormData()\n      fd.append('file', file)\n      fd.append('type', 'contract')\n      // 3. 调用上传接口\n      const _res = await uploadAPI(fd)\n      // 4. 存入表单\n      this.rentForm.contractId = _res.data.id\n      this.rentForm.contractUrl = _res.data.url\n    },\n    // 获取楼宇下拉列表\n    async getBuildList() {\n      // 作为下拉列表\n      // 1. 单独的接口\n      // 2. 使用table列表的接口 - {page:1,pageSize:100}\n      const res = await getBuildingRentListAPI()\n      this.buildingList = res.data\n    },\n    // 添加合同\n    addRent(id) {\n      this.dialogVisible = true\n      // 把企业id存入表单对象\n      this.rentForm.enterpriseId = id\n    },\n    closeDialog() {\n      this.dialogVisible = false\n    },\n    openDialog() {\n      this.getBuildList()\n    },\n    async getList() {\n      // 1. 接口调用\n      const res = await getListAPI(this.params)\n      // 2. 数据赋值(针对于每一行数据初始化一个专门存放合同列表的位置)\n      this.list = res.data.rows.map(item => {\n        return {\n          ...item,\n          rentList: [] // 合同列表\n        }\n      })\n      this.total = res.data.total\n    },\n    // 分页\n    pageChange(page) {\n      this.params.page = page\n      this.getList()\n    },\n    doSearch() {\n      this.params.page = 1\n      this.getList()\n    },\n    clearSearch() {\n      console.log('清空了')\n      this.getList()\n    },\n    editEnterprise(id) {\n      this.$router.push({\n        path: '/addEnterprise',\n        query: {\n          id\n        }\n      })\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n.department-container {\n  padding: 10px;\n}\n\n.search-container {\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid rgb(237, 237, 237, .9);\n  ;\n  padding-bottom: 20px;\n\n  .search-label {\n    width: 100px;\n  }\n\n  .search-main {\n    width: 220px;\n    margin-right: 10px;\n  }\n}\n.create-container{\n  margin: 10px 0px;\n}\n.page-container{\n  padding:4px 0px;\n  text-align: right;\n}\n.form-container{\n  padding:0px 80px;\n}\n</style>\n"]}]}