{"remainingRequest":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\src\\views\\System\\Role\\AddRole.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\src\\views\\System\\Role\\AddRole.vue","mtime":1704167259197},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\babel.config.js","mtime":1704165997482},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1714140753088},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1714140751623},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1714140753088},{"path":"C:\\Users\\zxb\\Desktop\\黑马前端\\课件源码资料\\阶段五 Vue2+Vue3项目实战开发\\黑马智数项目-配套资料\\黑马智数项目-配套资料\\项目代码\\hmzs\\hmzs-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1714140753454}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["getTreeListAPI","addRoleAPI","getRoleDetailAPI","updateRoleAPI","data","currentActive","roleForm","roleName","remark","roleRules","required","message","trigger","treeList","disableTreeList","permsList","computed","roleId","$route","query","mounted","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","getTreeList","getDetail","stop","methods","_this2","_callee2","res","_res$data","perms","_callee2$","_context2","sent","$refs","tree","forEach","treeInstance","index","setCheckedKeys","confirmAdd","_this3","_callee3","_callee3$","_context3","_objectSpread","$router","back","_this4","_callee4","_callee4$","_context4","JSON","parse","stringify","_this5","infoForm","validate","valid","keys","getCheckedKeys","console","log","push","flat","length","$message","type","diabledTree"],"sources":["src/views/System/Role/AddRole.vue"],"sourcesContent":["<template>\n  <div class=\"add-role\">\n    <header class=\"add-header\">\n      <div class=\"left\">\n        <span class=\"arrow\" @click=\"$router.back()\"><i class=\"el-icon-arrow-left\" />返回</span>\n        <span>|</span>\n        <span>添加角色</span>\n      </div>\n      <div class=\"right\">\n        黑马程序员\n      </div>\n    </header>\n    <main class=\"add-main\">\n      <div class=\"step-container\">\n        <el-steps direction=\"vertical\" :active=\"currentActive\">\n          <el-step title=\"角色信息\" />\n          <el-step title=\"权限信息\" />\n          <el-step title=\"检查并完成\" />\n        </el-steps>\n      </div>\n      <!--\n        v-if: 真实的dom创建和移除\n        v-show: 操作的只是css样式的变化  原因: 步骤切换的时候有可能回退 保证dom之前操作过的状态还在\n       -->\n      <div v-show=\"currentActive === 1\" class=\"form-container\">\n        <div class=\"title\">角色信息</div>\n        <div class=\"form\">\n          <el-form ref=\"infoForm\" class=\"form-box\" :model=\"roleForm\" :rules=\"roleRules\">\n            <el-form-item label=\"角色名称\" prop=\"roleName\">\n              <el-input v-model=\"roleForm.roleName\" />\n            </el-form-item>\n            <el-form-item label=\"角色描述\">\n              <el-input v-model=\"roleForm.remark\" />\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n      <div v-show=\"currentActive === 2\" class=\"form-container\">\n        <div class=\"title\">权限配置</div>\n        <div class=\"form\">\n          <div class=\"tree-wrapper\">\n            <div v-for=\"item in treeList\" :key=\"item.id\" class=\"tree-item\">\n              <div class=\"tree-title\">{{ item.title }}</div>\n              <el-tree\n                ref=\"tree\"\n                :data=\"item.children\"\n                show-checkbox\n                default-expand-all\n                node-key=\"id\"\n                highlight-current\n                check-strictly\n                :props=\"{ label: 'title' }\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-show=\"currentActive === 3\" class=\"form-container\">\n        <div class=\"title\">检查并完成</div>\n        <div class=\"form\">\n          <div class=\"info\">\n            <div class=\"form-item\">角色名称：{{ roleForm.roleName }}</div>\n            <div class=\"form-item\">角色描述：{{ roleForm.remark }}</div>\n            <div class=\"form-item\">角色权限：</div>\n            <div class=\"tree-wrapper\">\n              <div v-for=\"item in disableTreeList\" :key=\"item.id\" class=\"tree-item\">\n                <div class=\"tree-title\">{{ item.title }}</div>\n                <!--\n                  在内部通过遍历数组生成每一个树节点的时候 检测当前props选项中\n                  是否传入了一个配置项 叫做disabled 如果传入了 调用这个方法拿到它的返回值\n                  如果当前拿到的是true 就把当前项禁用掉 如果没有返回true 不禁用\n\n                  arrary.some(item=> 判断条件)\n                 -->\n                <el-tree\n                  ref=\"diabledTree\"\n                  :data=\"item.children\"\n                  show-checkbox\n                  default-expand-all\n                  check-strictly\n                  node-key=\"id\"\n                  :highlight-current=\"false\"\n                  :props=\"{ label: 'title', disabled:()=>true}\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n    <footer class=\"add-footer\">\n      <!--\n        上一步按钮 只有currentAcitve > 1 才显示\n        下一步按钮 等于3不显示\n       -->\n      <div class=\"btn-container\">\n        <el-button v-if=\"currentActive>1\" @click=\"prev\">上一步</el-button>\n        <el-button v-if=\"currentActive !== 3\" type=\"primary\" @click=\"next\">下一步</el-button>\n        <el-button v-if=\"currentActive === 3\" type=\"primary\" @click=\"confirmAdd\">确认添加</el-button>\n      </div>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport { getTreeListAPI, addRoleAPI, getRoleDetailAPI, updateRoleAPI } from '@/api/system'\nexport default {\n  data() {\n    return {\n      currentActive: 1,\n      roleForm: {\n        roleName: '',\n        remark: ''\n      },\n      roleRules: {\n        roleName: [\n          { required: true, message: '请输入角色名称', trigger: 'blur' }\n        ]\n      },\n      treeList: [], // tree列表\n      disableTreeList: [], // 回填显示的树列表\n      permsList: [] // 存入选中项节点\n    }\n  },\n  computed: {\n    roleId() {\n      return this.$route.query.roleId\n    }\n  },\n  async mounted() {\n    await this.getTreeList()\n    if (this.roleId) {\n      this.getDetail()\n    }\n  },\n  methods: {\n    async getDetail() {\n      const res = await getRoleDetailAPI(this.roleId)\n      const { perms, roleName, remark } = res.data\n      this.roleForm.roleName = roleName\n      this.roleForm.remark = remark\n      // 回填树  setCheckedKeys\n      this.$refs.tree.forEach((treeInstance, index) => {\n        treeInstance.setCheckedKeys(perms[index])\n      })\n    },\n    async confirmAdd() {\n      if (this.roleId) {\n        await updateRoleAPI({\n          roleId: this.roleId,\n          ...this.roleForm,\n          perms: this.permsList\n        })\n      } else {\n        await addRoleAPI({\n          ...this.roleForm,\n          perms: this.permsList\n        })\n      }\n\n      this.$router.back()\n    },\n    async getTreeList() {\n      const res = await getTreeListAPI()\n      this.treeList = res.data\n      // 在disabledTreeList中放一份数据 因为数组是引用类型 在进行赋值的时候实际上赋值是数据的引用\n      // 也就是说这俩份数据实际指向的是同一个内存区域（堆内存） 一个修改另一个也会受到影响\n      // 解决办法：深拷贝\n      this.disableTreeList = JSON.parse(JSON.stringify(res.data))\n    },\n    prev() {\n      if (this.currentActive === 1) return\n      this.currentActive--\n    },\n    next() {\n      if (this.currentActive === 3) return\n      // 在角色信息这个状态下 做表单校验 如果校验通过 才能进入到下一个状态 （this.currentActive++）\n      if (this.currentActive === 1) {\n        // 处在角色信息状态\n        this.$refs.infoForm.validate(valid => {\n          if (valid) {\n            this.currentActive++\n          }\n        })\n      } else if (this.currentActive === 2) {\n        // 选择权限信息的状态\n        // 目标：判断用户至少选择了一项\n        // 思路: 获取到用户选择了什么 把每一项的数组展开合并为一个大数组 如果这个大数组长度大于零证明至少选中了一项\n        this.permsList = []\n        this.$refs.tree.forEach(treeInstance => {\n          const keys = treeInstance.getCheckedKeys()\n          console.log(keys)\n          this.permsList.push(keys)\n        })\n        if (this.permsList.flat().length === 0) {\n          // 没有选中\n          return this.$message({\n            type: 'warning',\n            message: '请至少选择一项'\n          })\n        } else {\n          this.currentActive++\n          // 回填树形结构\n          this.$refs.diabledTree.forEach((treeInstance, index) => {\n            treeInstance.setCheckedKeys(this.permsList[index])\n          })\n        }\n      }\n    }\n  }\n}\n</script>\n<style scoped lang=\"scss\">\n.add-role {\n  background-color: #f4f6f8;\n  height: 100vh;\n\n  .add-header {\n    display: flex;\n    justify-content: space-between;\n    padding: 0 20px;\n    height: 64px;\n    line-height: 64px;\n    font-size: 16px;\n    font-weight: bold;\n    background-color: #fff;\n\n    .left {\n      span {\n        margin-right: 4px;\n      }\n\n      .arrow {\n        cursor: pointer;\n      }\n    }\n\n    .right {\n      text-align: right;\n    }\n  }\n\n  .add-main {\n    position: fixed;\n    top: 64px;\n    bottom: 88px;\n    width: 100%;\n    overflow-y: auto;\n    background: #f4f6f8;\n    padding: 20px 230px;\n    display: flex;\n    .step-container {\n      height: 400px;\n      width: 200px;\n    }\n    .form-container {\n      flex:1;\n      background-color: #fff;\n      overflow-y: auto;\n      .title {\n        height: 60px;\n        line-height: 60px;\n        padding-left: 20px;\n      }\n      .form {\n        margin-bottom: 20px;\n        padding: 20px 65px 24px;\n        .el-form {\n          display: flex;\n          flex-wrap: wrap;\n        }\n        .info{\n          font-size:14px;\n          color:#666;\n          .form-item{\n            margin-bottom:20px;\n          }\n        }\n      }\n      .form-box{\n        width: 600px;\n        display: flex;\n        flex-direction: column;\n      }\n    }\n  }\n\n  .add-footer {\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n    padding: 24px 50px;\n    color: #000000d9;\n    font-size: 14px;\n    background: #fff;\n    text-align: center;\n    z-index: 10001;\n  }\n  .tree-wrapper {\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n      .tree-item {\n        flex: 1;\n        padding: 0px 4px;\n        text-align: center;\n        .tree-title {\n          background: #f5f7fa;\n          text-align: center;\n          padding: 10px 0;\n          margin-bottom: 12px;\n        }\n      }\n    }\n}\n</style>\n"],"mappings":"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"}]}